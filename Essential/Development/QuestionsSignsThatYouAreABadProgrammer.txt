1) Рассуждать о коде значит понимать порядок исполнения инструкций, зная, каково предназначение кода.
2) Чтобы справиться с этим, программисту следует пользоваться встроенным в IDE debugger'ом
   как помощником в случае неспособности "шагать" по коду построчно.

3) Плохое понимание модели языка программирования.
4) Нет более эффуктивного способа выучить новую модель программирования, чем начать новый проект, 
   приняв решение использовать новые консрукции, неважно с какой степенью осознанности.

5) Дефицит исследовательских навыков / Хронически плохое знание возможностей платформы.
6) Программист не может приобрести знания не приостановившись, и, скорее всего, это была отчаянная
   попытка заставить каждую функцию работать, чего бы это ему ни стоило.

7) Неспособность понять указатели.
8) Указатели могут быть описаны с помощью различных метафор, структурам данных может быть найдено
   множество аналогов.

9) Сложности с рекурсией.
10) Начать с написани функции с одним основным условием и с однм рекурсивным вызвом, который использует
    тот же, не измененный аргумент, что и был получен на входе.