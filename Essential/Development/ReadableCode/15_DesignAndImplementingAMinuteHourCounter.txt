1) Разработка начинается с создания простого решения, что помогло осознать дву проблемы данного дизайна: 
   скорость и объем использованной памяти.

2) Далее, попробовали релизовать конвейерный дизайн. Он повысил скорость и сократил объем используемой памяти,
   но оказался недостаточно хорош для высокопроизводительных приложений. Этот дизайн был также очень негибким:
   адаптация кода к работе с другими временными интервалами потребовала бы много времени.

3) Итоговое решение позволило снять все предыдущие проблемы, разбив их при этом на подзадачи. Созданы новые классы.

4) ConveyorQueue - ограниченная очередь, которая оперирует итоговой суммой и может быть сдвинута.

5) TrailingBucketCounter - передвигает ConveyorQueue в соответствии с прошедшим временем, а также работает с одним (самым поздним)
   временным интервалом с заданной точностью.

6) MinuteCounter - просто содержит два объекта класса TrainingBucketCounters:
   один для подсчета всех событий за минуту, другой - для подсчета всех событий за час.