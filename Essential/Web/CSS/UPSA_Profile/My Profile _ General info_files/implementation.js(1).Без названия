(function () {'function'!=typeof Object.assign&&Object.defineProperty(Object,'assign',{value:function(e,t){'use strict';if(null==e)throw new TypeError('Cannot convert undefined or null to object');for(var n=Object(e),r=1;r<arguments.length;r++){var o=arguments[r];if(null!=o)for(var c in o)Object.prototype.hasOwnProperty.call(o,c)&&(n[c]=o[c])}return n},writable:!0,configurable:!0});
window.EpamServices = window.EpamServices || {};
window.EpamServices._internal = window.EpamServices._internal || {};
var globalAskSettings = JSON.parse('{}');
window.EpamServices._internal.globalAsk = Object.assign({}, window.EpamServices._internal.globalAsk, globalAskSettings);
var globalMenuSettings = JSON.parse('{"environment":"Production","analyticsIsEnabled":true,"baseUrl":"https://menu.epam.com","allowNotifications":true,"muteNotifications":false}');
window.EpamServices._internal.globalMenuSettings = Object.assign({}, window.EpamServices._internal.globalMenuSettings, globalMenuSettings);
var interactiveProductsSettings = JSON.parse('{"application":"UPSA","baseUrl":"https://menu.epam.com","isSmartTooltipEnabled":true,"isUserFeedbackEnabled":false}');
window.EpamServices._internal.interactiveProductsSettings = Object.assign({}, window.EpamServices._internal.interactiveProductsSettings, interactiveProductsSettings);})();

!function(t){var e={};function n(o){if(e[o])return e[o].exports;var i=e[o]={i:o,l:!1,exports:{}};return t[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=t,n.c=e,n.d=function(t,e,o){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:o})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(o,i,function(e){return t[e]}.bind(null,i));return o},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=9)}([function(t,e,n){n(1),n(2);var o=function(){this._scrollBarWidth=0},i=function(t,e,n){t.addEventListener?t.addEventListener(e,n):t.attachEvent("on"+e,n)};o.prototype.addEventListener=function(t,e,n){i(t,e,n)},o.prototype.addEventListenerToCollection=function(t,e,n){for(var o=0;o<t.length;o++)i(t.item(o),e,n)},o.prototype.removeEventListener=function(t,e,n){t.removeEventListener?t.removeEventListener(e,n):t.detachEvent("on"+e,n)},o.prototype.createEvent=function(t,e,n,o,i){var r=null;n=n||!1,o=o||!1,i=i||void 0;try{r=new CustomEvent(e,{bubbles:n,cancelable:o,detail:i})}catch(t){(r=document.createEvent("Event")).initEvent(e,n,o),r.detail=i}t.dispatchEvent(r)},o.prototype.hasClassName=function(t,e){if(Array.isArray(e)){for(var n=!1,i=0;!n&&i<e.length;i++)n=o.prototype.hasClassName(t,e[i]);return n}return t.classList&&"object"!=typeof t.classList?t.classList.contains(e):String(t.className).split(" ").indexOf(e)>-1},o.prototype.removeClassName=function(t,e){if(this.hasClassName(t,e)){var n=new RegExp("(\\s|^)"+e+"(?=\\s|$)");t.className=t.className.replace(n,"")}},o.prototype.addClassName=function(t,e){!1===this.hasClassName(t,e)&&(t.className=t.className+" "+e)},o.prototype.getCookie=function(t){var e=document.cookie.match(new RegExp("(?:^|; )"+t.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g,"\\$1")+"=([^;]*)"));return e?decodeURIComponent(e[1]):void 0},o.prototype.setCookie=function(t,e,n){var o=(n=n||{}).expires;if("number"==typeof o&&o){var i=new Date;i.setTime(i.getTime()+1e3*o),o=n.expires=i}o&&o.toUTCString&&(n.expires=o.toUTCString());var r=t+"="+(e=encodeURIComponent(e));for(var s in n){r+="; "+s;var a=n[s];!0!==a&&(r+="="+a)}document.cookie=r},o.prototype.deleteCookie=function(t){this.setCookie(t,"",{expires:-1})},o.prototype.windowHasScrollbar=function(){if(scrollPosition=window.scrollY||document.documentElement.scrollTop,scrollPosition>0)return!0;if("number"==typeof window.innerWidth)return window.innerWidth>document.documentElement.clientWidth;var t,e,n=document.documentElement||document.body;void 0!==n.currentStyle&&(t=n.currentStyle.overflow),t=t||window.getComputedStyle(n,"").overflow,void 0!==n.currentStyle&&(e=n.currentStyle.overflowY),e=e||window.getComputedStyle(n,"").overflowY;var o=n.scrollHeight>n.clientHeight,i=/^(visible|auto)$/.test(t)||/^(visible|auto)$/.test(e);return o&&i||("scroll"===t||"scroll"===e)},o.prototype.getScrollBarWidth=function(){if(this._scrollBarWidth>0)return this._scrollBarWidth;var t=document.createElement("div");t.style.width="100px",t.style.height="100px",t.style.overflow="hidden",t.style.visibility="hidden",t.innerHTML="&nbsp;",document.body.appendChild(t);var e=t.offsetWidth;t.style.overflow="scroll";var n=t.offsetWidth;return e==n&&(n=t.clientWidth),document.body.removeChild(t),this._scrollBarWidth=e-n,this._scrollBarWidth},o.prototype.itIsInternetExplorer=function(){var t=window.navigator.userAgent;return!!(t.indexOf("MSIE ")>0||t.match(/Trident.*rv\:11\./)||t.match(/Edge\/\d./))},o.prototype.objectToPostString=function(t){var e="",n=function(t,n){e+=t+"="+n+"&"};for(var o in t)if(Object.prototype.hasOwnProperty.call(t,o)){var i=t[o];if(Array.isArray(i))for(var r=0;r<i.length;r++)n(o,i[r]);else n(o,i)}return e.length>1&&(e=e.substring(0,e.length-1)),e},o.prototype.ajaxPost=function(t){var e=t.url,n=t.data,i=t.success,r=t.fail,s=t.always,a=new("onload"in new XMLHttpRequest?XMLHttpRequest:XDomainRequest);a.open("POST",e,!0),a.withCredentials=!0,a.setRequestHeader("Content-Type","application/x-www-form-urlencoded");var u=function(t){"function"==typeof r&&r(t,a.status)};a.onload=function(){if(200==this.status){var t=JSON.parse(this.response);!0===t.hasError?u(t.error):(e=t.result,"function"==typeof i&&i(e,a.status))}else u(this.response);var e},a.onerror=function(){u(this.response)},a.onloadend=function(){"function"==typeof s&&s(a.status)};var l=o.prototype.objectToPostString(n);return a.send(l),a},o.prototype.ajaxGet=function(t){var e=t.url,n=t.data,i=t.success,r=t.fail,s=t.always;e+="?"+o.prototype.objectToPostString(n);var a=new("onload"in new XMLHttpRequest?XMLHttpRequest:XDomainRequest);a.open("GET",e,!0),a.withCredentials=!0,a.setRequestHeader("Content-Type","application/json");var u=function(t){"function"==typeof r&&r(t,a.status)};return a.onload=function(){if(200==this.status){var t=JSON.parse(this.response);!0===t.hasError?u(t.error):(e=t.result,"function"==typeof i&&i(e,a.status))}else u(this.response);var e},a.onerror=function(){u(this.response)},a.onloadend=function(){"function"==typeof s&&s(a.status)},a.send(),a},o.prototype.ajaxGetHtml=function(t){var e=t.url,n=t.data,i=t.success,r=t.fail,s=t.always;e+="?"+o.prototype.objectToPostString(n);var a=new("onload"in new XMLHttpRequest?XMLHttpRequest:XDomainRequest);a.open("GET",e,!0),a.withCredentials=!0,a.setRequestHeader("Content-Type","text/html");var u=function(t){"function"==typeof r&&r(t,a.status)};return a.onload=function(){var t;this.status>=200&&this.status<300?(t=this.response,"function"==typeof i&&i(t,a.status)):u(this.response)},a.onerror=function(){u(this.response)},a.onloadend=function(){"function"==typeof s&&s(a.status)},a.send(),a},o.prototype.getHtmlAttribute=function(t,e,n){var o=t.attributes[e];return o?o.value:null|n},o.prototype.mapping=function(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&Object.prototype.hasOwnProperty.call(e,n)&&(e[n]=t[n])},o.prototype.mappingForce=function(t,e){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},o.prototype.getProtocolHostPort=function(){var t=window.location.href.split("/",3);return t[0]+"//"+t[2]},o.prototype.getWindowSize=function(){var t=window,e="inner";return"innerWidth"in window||(e="client",t=document.documentElement||document.body),{width:t[e+"Width"],height:t[e+"Height"]}},o.prototype.getRandomInt=function(t,e){return Math.floor(Math.random()*(e-t))+t},o.prototype.htmlDecode=function(t){var e=document.createElement("textarea");return e.innerHTML=t,e.innerText},o.prototype.createElements=function(t){var e=document.createElement("div");return e.innerHTML=o.prototype.htmlDecode(t),e.children},o.prototype.getGetFormValue=function(t,e){var n=t.querySelectorAll("input[name="+e+"]"),i=function(t){return"radio"==t.type||"checkbox"==t.type?t.checked?o.prototype.getHtmlAttribute(t,"value",null):null:o.prototype.getHtmlAttribute(t,"value",null)};if(0==n.length)return null;if(1==n.length)return i(n[0]);for(var r=[],s=0;s<n.length;s++){var a=i(n[s]);null!=a&&r.push(a)}return r},o.prototype.getTransitionEventName=function(t){var e,n={transition:"transitionend",OTransition:"oTransitionEnd",MozTransition:"transitionend",WebkitTransition:"webkitTransitionEnd"};for(e in n)if(void 0!==t.style[e])return n[e];return null},t.exports=o},function(t,e){Array.prototype.findIndex||Object.defineProperty(Array.prototype,"findIndex",{value:function(t){if(null==this)throw new TypeError('"this" is null or not defined');var e=Object(this),n=e.length>>>0;if("function"!=typeof t)throw new TypeError("predicate must be a function");for(var o=arguments[1],i=0;i<n;){var r=e[i];if(t.call(o,r,i,e))return i;i++}return-1}})},function(t,e){"function"!=typeof Object.assign&&Object.defineProperty(Object,"assign",{value:function(t,e){"use strict";if(null==t)throw new TypeError("Cannot convert undefined or null to object");for(var n=Object(t),o=1;o<arguments.length;o++){var i=arguments[o];if(null!=i)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(n[r]=i[r])}return n},writable:!0,configurable:!0})},,,,function(t,e,n){var o=n(0),i=function(){this.globalMenuObject=window.EpamServices.globalMenu,this.menuSettings=window.EpamServices._internal.globalMenuSettings,this.authUtil=window.EpamServices._internal.auth,this.baseUrl=this.globalMenuObject._getBaseUrl(),this.frame=null,this.overlapDiv=null,this.styleHideScroll=null,this.windowScrollY=0,this.utils=new o,this.menuButtons=[],this.menuUrlQuery="/home/publicmenu",this.globalMenuObject.show=this.show.bind(this),this.globalMenuObject.hide=this.hide.bind(this),this.globalMenuObject.isOpen=this.isOpen.bind(this)};i.prototype.show=function(){this.menuSettings.noAuth?this.createFrameOfMenu():this.utils.ajaxGet({url:this.baseUrl+"/api/users/me",data:null,success:function(t,e){this.createFrameOfMenu()}.bind(this),fail:function(t,e){401!==e?console.log(t):this.globalMenuObject.showNeedAuthMessage()}.bind(this)})},i.prototype.createFrameOfMenu=function(){if(null==this.frame){var t=this.utils.getProtocolHostPort(),e=encodeURIComponent(t);this.frame=this.globalMenuObject._showFrame(this.menuUrlQuery+"?referrer="+e,this.closeFrameCallback.bind(this))}},i.prototype.closeFrameCallback=function(){this.frame=null},i.prototype.hide=function(){this.frame&&this.globalMenuObject._hideFrame(this.frame,this.closeFrameCallback.bind(this))},i.prototype.isOpen=function(){return null!=this.frame},i.prototype.getMenuButtonIndexByElement=function(t){for(var e=-1,n=this.menuButtons,o=0;o<n.length&&-1==e;o++){n[o].btnElement==t&&(e=o)}return e},i.prototype.addMenuButtons=function(t){null!=t&&-1==this.getMenuButtonIndexByElement(t)&&this.menuButtons.push({btnElement:t,counter:null})},i.prototype.setMenuButtonAdditionStyle=function(t){var e=getComputedStyle(t),n=e.position;-1==["absolute","fixed","relative"].indexOf(n)&&(t.style.position="relative");["inline"].indexOf(e.display)>=0&&(t.style.display="inline-block")},i.prototype.setAllMenuButtonsAdditionStyle=function(){for(var t=0;t<this.menuButtons.length;t++){var e=this.menuButtons[t].btnElement;this.setMenuButtonAdditionStyle(e)}},i.prototype.initMenuButtons=function(){var t=document.getElementById("global_menu_toggle");null!=t&&(this.addMenuButtons(t),this.setMenuButtonAdditionStyle(t));for(var e=document.getElementsByClassName("epam-global-menu"),n=0;n<e.length;n++){var o=e[n];this.addMenuButtons(o),this.setMenuButtonAdditionStyle(o)}},i.prototype.listenerWindowMessages=function(t){t.origin==this.baseUrl&&this.applyWindowMessage(t.data)},i.prototype.applyWindowMessage=function(t){return"close"===t.command?(this.globalMenuObject.hide(),!0):"redirect"===t.command&&(t.args&&t.args.href&&(window.location=t.args.href),!0)},i.prototype.getLocation=function(t){var e=document.createElement("a");return e.href=t,e},i.prototype.initUI=function(){this.initMenuButtons()},i.prototype.init=function(){"complete"==document.readyState||"loaded"==document.readyState?this.initUI():this.utils.addEventListener(document,"DOMContentLoaded",function(){this.initUI()}.bind(this)),this.utils.addEventListener(window,"message",this.listenerWindowMessages.bind(this))},t.exports=i},,,function(t,e,n){(new(n(10))).init()},function(t,e,n){var o=n(6),i=function(){o.apply(this,arguments),this.menuUrlQuery="/home/menu",this.allowNotifications=this.menuSettings.allowNotifications,this.countOfTriesCreateWebSocket=0,this.maxCountOfTriesCreateWebSocket=30,this.counterTypesEnum={notifications:"notifications",approvals:"approvals",none:"none"},this.counterState={notifications:0,approvals:0,mute:this.menuSettings.muteNotifications},this.socket=null,this.initStyles(),this.buttonsVariants={},this.buttonsVariants[this.counterTypesEnum.notifications]=this.baseUrl+"/content/images/adnoc/adnodib_gm_with_notifications_icon.svg",this.buttonsVariants[this.counterTypesEnum.approvals]=this.baseUrl+"/content/images/adnoc/adnodib_gm_with_notifications_icon.svg",this.buttonsVariants[this.counterTypesEnum.none]=this.baseUrl+"/content/images/adnoc/adnodib_gm_notifications_icon.svg"};function r(t,e,n){for(var o in e)if(e[o]===t||e[o]===n+t)return!0;return!1}(i.prototype=Object.create(o.prototype)).constructor=i,i.prototype.initStyles=function(){this.counterStyle={position:"absolute",left:"35px",top:"19px",background:"#FF2D3C",boxShadow:"rgba(255, 45, 60, 0.8) 0px 0px 6px 1px",borderRadius:"50%",width:"6px",height:"6px"},this.counterApprovalsStyle={position:"absolute",width:"21px",height:"21px",color:"#fff",top:"10px",left:"auto",right:"10px",fontSize:"0",lineHeight:"0",display:"flex",justifyContent:"center",alignItems:"center",paddingLeft:"1px"}},i.prototype.removeCounter=function(t){var e=t.counter.element,n=t.btnElement.querySelector("img");n&&r(n.getAttribute("src"),this.buttonsVariants,this.baseUrl)?n.setAttribute("src",this.buttonsVariants[this.counterTypesEnum.none]):null!=e&&null!=e.parentElement&&(e.parentElement.removeChild(e),e=null),t.counter=null},i.prototype.defineCounterStyle=function(t,e){var n=Object.assign({},this.counterStyle);t.type!==this.counterTypesEnum.approvals&&t.type!==this.counterTypesEnum.notifications||(n=this.counterApprovalsStyle),this.utils.getWindowSize().width<=768&&(n.display="none"),s(n,e),this.utils.mappingForce(n,t.element.style)},i.prototype.tryUpdateCounter=function(t){t>5||(0==this.menuButtons.length&&(this.initMenuButtons(),setTimeout(function(){t=void 0!==t?t:0,t+=1,this.tryUpdateCounter(t)}.bind(this),500)),this.updateCounters(this.menuButtons))},i.prototype.updateCounters=function(t){var e=this.counterTypesEnum.none;this.counterState.mute?e=this.counterTypesEnum.none:this.counterState.approvals>0?e=this.counterTypesEnum.approvals:this.counterState.notifications>0&&(e=this.counterTypesEnum.notifications);for(var n=0;n<t.length;n++)this.updateCounter(t[n],e)},i.prototype.updateCounter=function(t,e){var n=t.counter?t.counter.type:this.counterTypesEnum.none;n!=e?(n!=this.counterTypesEnum.none&&this.removeCounter(t),e!=this.counterTypesEnum.none&&this.renderCounter(t,e)):this.updateAmount(t.counter)},i.prototype.popupIndicator=function(t,e,n,o,r,s){var a=parseInt(t.style.width,10),u=parseInt(t.style.height,10),l=!0;"+"===s?(a<e+6&&(t.style.width=a+1+"px",l=!1),u<n+6&&(t.style.height=u+1+"px",l=!1),l?(t.style.fontSize=o+"px",setTimeout((function(){i.prototype.popupIndicator(t,e,n,o,r,"-")}),2*r)):setTimeout((function(){i.prototype.popupIndicator(t,e,n,o,r,s)}),r)):(a>e&&(t.style.width=a-1+"px",l=!1),u>n&&(t.style.height=u-1+"px",l=!1),l||setTimeout((function(){i.prototype.popupIndicator(t,e,n,o,r,"-")}),2*r))},i.prototype.createCounterMarker=function(t,e,n){var o={top:0,left:0};if(t.element=document.createElement("div"),null!=n&&(o.left=n.offsetLeft,o.top=n.offsetTop),e.btnElement.appendChild(t.element),this.defineCounterStyle(t,o),t.type===this.counterTypesEnum.approvals||t.type===this.counterTypesEnum.notifications){var i=document.createElement("div");i.style.width="0px",i.style.height="0px",i.style.background="rgb(230, 66, 34)",i.style.borderRadius="50%",i.style.display="flex",i.style.justifyContent="center",i.style.alignItems="center",i.style.fontFamily='"MS serif"',i.style.lineLeight="0",t.element.appendChild(i),this.updateAmount(t),this.popupIndicator(i,16,16,12,10,"+")}},i.prototype.updateAmount=function(t){if(t&&(t.type===this.counterTypesEnum.approvals||t.type===this.counterTypesEnum.notifications)){var e=this.counterState.notifications+this.counterState.approvals;t.element.firstElementChild.innerHTML=e>99?"99":e}},i.prototype.renderCounter=function(t,e){var n={type:e,element:null},o=t.btnElement.querySelector("img");o&&r(o.getAttribute("src"),this.buttonsVariants,this.baseUrl)?o.setAttribute("src",this.buttonsVariants[n.type]):this.createCounterMarker(n,t,o),t.counter=n};var s=function(t,e){t.left=parseInt(t.left)+e.left+"px",t.top=parseInt(t.top)+e.top+"px"};i.prototype.updateUserNotificationsCounter=function(){this.utils.ajaxGet({url:this.baseUrl+"/notifications/notificationsCount",data:null,success:function(t,e){this.setNotifocationsCounterValueToAllButtons(t)}.bind(this)})},i.prototype.applyWindowMessage=function(t){return!!o.prototype.applyWindowMessage.apply(this,arguments)||("changeNotificationsCounter"===t.command?(t.args&&null!=t.args.count&&(this.counterState.notifications=t.args.count,this.tryUpdateCounter()),!0):"changeApprovalsCounter"===t.command?(t.args&&null!=t.args.count&&(this.counterState.approvals=t.args.count,this.tryUpdateCounter()),!0):"setMute"===t.command&&(t.args&&null!=t.args.mute&&(his.counterState.mute=t.args.mute,this.tryUpdateCounter()),!0))},i.prototype.createWebSocket=function(){if(null==this.socket)if(this.countOfTriesCreateWebSocket>=this.maxCountOfTriesCreateWebSocket)console.log("It has reached the maximum count of tries of create websocket.");else{var t=60,e=function(){var e=Math.pow(2,this.countOfTriesCreateWebSocket-1)*t;return e>3600&&(e=3600),1e3*e}.bind(this),n=this.getLocation(this.baseUrl),o="ws";"https:"===n.protocol&&(o="wss");try{this.socket=new WebSocket(o+"://"+n.host+"/websocket")}catch(t){return console.error("WebSocket has not been created"),void console.error(t)}this.socket.onopen=function(){this.countOfTriesCreateWebSocket=0;var t=1e3*this.utils.getRandomInt(45,55),e=setInterval(function(){null!=this.socket&&this.socket.send("ping")}.bind(this),t);this.socket.pingInterval=e}.bind(this),this.socket.onclose=function(t){if(t.wasClean){if("need authorization"==t.reason){this.countOfTriesCreateWebSocket++;var n=e();setTimeout(function(){this.authUtil.checkLoginStatus(function(t){!0===t&&this.createWebSocket()}.bind(this))}.bind(this),n)}}else{this.countOfTriesCreateWebSocket++;n=e();setTimeout(this.createWebSocket.bind(this),n)}clearInterval(this.socket.pingInterval),this.socket=null}.bind(this),this.socket.onmessage=function(e){if(null!=e&&null!=e.data&&"ping"!=e.data){var n={};try{n=JSON.parse(e.data)}catch(t){return void console.error(t)}if("CountUnviewedNotifications"==n.type&&null!=n.args&&null!=n.args.count&&(this.counterState.notifications=n.args.count,this.tryUpdateCounter()),"CountUnviewedApprovals"==n.type&&null!=n.args&&null!=n.args.count&&(this.counterState.approvals=n.args.count,this.tryUpdateCounter()),"SetNotificationsMute"==n.type)return void(null!=n.args&&null!=n.args.mute&&(this.counterState.mute=n.args.mute,this.tryUpdateCounter()));if("SetTimeRecreationWebSocket"==n.type)return void(null!=n.args&&null!=n.args.timeRecreationSec&&(o=n.args.timeRecreationSec,t=o<1?1:o));if("TourIsOver"===n.type)return void(null!=n.args&&n.args.tourId&&window.postMessage({action:n.type,tourId:+n.args.tourId},"*"));if("FeedbackIsOver"===n.type)return void(null!=n.args&&n.args.feedbackId&&window.postMessage({action:n.type,tourId:+n.args.feedbackId},"*"));if("UserInInteractiveProductsHygiene"===n.type)return void(null!=n.args&&window.postMessage({action:n.type,args:n.args},"*"))}var o}.bind(this),this.socket.onerror=function(t){}.bind(this)}},i.prototype.closeSocket=function(){null!=this.socket&&(this.socket.close(1e3,"user close socket"),this.socket=null)},i.prototype.initUI=function(){o.prototype.initUI.apply(this,arguments)},i.prototype.init=function(){if(o.prototype.init.apply(this,arguments),this.allowNotifications){var t=this.utils.getRandomInt(0,5);setTimeout(this.createWebSocket.bind(this),1e3*t)}},t.exports=i}]);
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 42);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var bind = __webpack_require__(6);

/*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

var toString = Object.prototype.toString;

/**
 * Determine if a value is an Array
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Array, otherwise false
 */
function isArray(val) {
  return toString.call(val) === '[object Array]';
}

/**
 * Determine if a value is undefined
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if the value is undefined, otherwise false
 */
function isUndefined(val) {
  return typeof val === 'undefined';
}

/**
 * Determine if a value is a Buffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Buffer, otherwise false
 */
function isBuffer(val) {
  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)
    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);
}

/**
 * Determine if a value is an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
 */
function isArrayBuffer(val) {
  return toString.call(val) === '[object ArrayBuffer]';
}

/**
 * Determine if a value is a FormData
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an FormData, otherwise false
 */
function isFormData(val) {
  return (typeof FormData !== 'undefined') && (val instanceof FormData);
}

/**
 * Determine if a value is a view on an ArrayBuffer
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
 */
function isArrayBufferView(val) {
  var result;
  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
    result = ArrayBuffer.isView(val);
  } else {
    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
  }
  return result;
}

/**
 * Determine if a value is a String
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a String, otherwise false
 */
function isString(val) {
  return typeof val === 'string';
}

/**
 * Determine if a value is a Number
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Number, otherwise false
 */
function isNumber(val) {
  return typeof val === 'number';
}

/**
 * Determine if a value is an Object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is an Object, otherwise false
 */
function isObject(val) {
  return val !== null && typeof val === 'object';
}

/**
 * Determine if a value is a Date
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Date, otherwise false
 */
function isDate(val) {
  return toString.call(val) === '[object Date]';
}

/**
 * Determine if a value is a File
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a File, otherwise false
 */
function isFile(val) {
  return toString.call(val) === '[object File]';
}

/**
 * Determine if a value is a Blob
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Blob, otherwise false
 */
function isBlob(val) {
  return toString.call(val) === '[object Blob]';
}

/**
 * Determine if a value is a Function
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Function, otherwise false
 */
function isFunction(val) {
  return toString.call(val) === '[object Function]';
}

/**
 * Determine if a value is a Stream
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a Stream, otherwise false
 */
function isStream(val) {
  return isObject(val) && isFunction(val.pipe);
}

/**
 * Determine if a value is a URLSearchParams object
 *
 * @param {Object} val The value to test
 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
 */
function isURLSearchParams(val) {
  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
}

/**
 * Trim excess whitespace off the beginning and end of a string
 *
 * @param {String} str The String to trim
 * @returns {String} The String freed of excess whitespace
 */
function trim(str) {
  return str.replace(/^\s*/, '').replace(/\s*$/, '');
}

/**
 * Determine if we're running in a standard browser environment
 *
 * This allows axios to run in a web worker, and react-native.
 * Both environments support XMLHttpRequest, but not fully standard globals.
 *
 * web workers:
 *  typeof window -> undefined
 *  typeof document -> undefined
 *
 * react-native:
 *  navigator.product -> 'ReactNative'
 * nativescript
 *  navigator.product -> 'NativeScript' or 'NS'
 */
function isStandardBrowserEnv() {
  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||
                                           navigator.product === 'NativeScript' ||
                                           navigator.product === 'NS')) {
    return false;
  }
  return (
    typeof window !== 'undefined' &&
    typeof document !== 'undefined'
  );
}

/**
 * Iterate over an Array or an Object invoking a function for each item.
 *
 * If `obj` is an Array callback will be called passing
 * the value, index, and complete array for each item.
 *
 * If 'obj' is an Object callback will be called passing
 * the value, key, and complete object for each property.
 *
 * @param {Object|Array} obj The object to iterate
 * @param {Function} fn The callback to invoke for each item
 */
function forEach(obj, fn) {
  // Don't bother if no value provided
  if (obj === null || typeof obj === 'undefined') {
    return;
  }

  // Force an array if not already something iterable
  if (typeof obj !== 'object') {
    /*eslint no-param-reassign:0*/
    obj = [obj];
  }

  if (isArray(obj)) {
    // Iterate over array values
    for (var i = 0, l = obj.length; i < l; i++) {
      fn.call(null, obj[i], i, obj);
    }
  } else {
    // Iterate over object keys
    for (var key in obj) {
      if (Object.prototype.hasOwnProperty.call(obj, key)) {
        fn.call(null, obj[key], key, obj);
      }
    }
  }
}

/**
 * Accepts varargs expecting each argument to be an object, then
 * immutably merges the properties of each object and returns result.
 *
 * When multiple objects contain the same key the later object in
 * the arguments list will take precedence.
 *
 * Example:
 *
 * ```js
 * var result = merge({foo: 123}, {foo: 456});
 * console.log(result.foo); // outputs 456
 * ```
 *
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function merge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = merge(result[key], val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Function equal to merge with the difference being that no reference
 * to original objects is kept.
 *
 * @see merge
 * @param {Object} obj1 Object to merge
 * @returns {Object} Result of all merge properties
 */
function deepMerge(/* obj1, obj2, obj3, ... */) {
  var result = {};
  function assignValue(val, key) {
    if (typeof result[key] === 'object' && typeof val === 'object') {
      result[key] = deepMerge(result[key], val);
    } else if (typeof val === 'object') {
      result[key] = deepMerge({}, val);
    } else {
      result[key] = val;
    }
  }

  for (var i = 0, l = arguments.length; i < l; i++) {
    forEach(arguments[i], assignValue);
  }
  return result;
}

/**
 * Extends object a by mutably adding to it the properties of object b.
 *
 * @param {Object} a The object to be extended
 * @param {Object} b The object to copy properties from
 * @param {Object} thisArg The object to bind function to
 * @return {Object} The resulting value of object a
 */
function extend(a, b, thisArg) {
  forEach(b, function assignValue(val, key) {
    if (thisArg && typeof val === 'function') {
      a[key] = bind(val, thisArg);
    } else {
      a[key] = val;
    }
  });
  return a;
}

module.exports = {
  isArray: isArray,
  isArrayBuffer: isArrayBuffer,
  isBuffer: isBuffer,
  isFormData: isFormData,
  isArrayBufferView: isArrayBufferView,
  isString: isString,
  isNumber: isNumber,
  isObject: isObject,
  isUndefined: isUndefined,
  isDate: isDate,
  isFile: isFile,
  isBlob: isBlob,
  isFunction: isFunction,
  isStream: isStream,
  isURLSearchParams: isURLSearchParams,
  isStandardBrowserEnv: isStandardBrowserEnv,
  forEach: forEach,
  merge: merge,
  deepMerge: deepMerge,
  extend: extend,
  trim: trim
};


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPopupPosition = exports.getCurrentUrlFromLocation = exports.urlIsMatchedAnyMask = exports.isMobile = exports.getUserFeedbackEnabled = exports.getSmartTooltipEnabled = exports.getBaseUrl = exports.getAppId = exports.getPropertySmartTooltip = exports.getUniqueSelector = exports.waitForElement = void 0;
var constants_1 = __webpack_require__(2);
var waitForElement = function (selector, preHandlerSelector, preHandlerEvent) { return new Promise(function (resolve) {
    var element = document.querySelector(selector);
    if (element) {
        resolve(element);
    }
    else {
        var preHandlerProcessed_1 = false;
        var processPreHandler_1 = function (el) {
            if (preHandlerEvent) {
                el.dispatchEvent(new MouseEvent(preHandlerEvent, {
                    bubbles: true,
                    cancelable: true,
                    view: window,
                }));
            }
            preHandlerProcessed_1 = true;
        };
        var checkHtmlElement_1 = function (el) {
            if (el.matches(selector)) {
                observer_1.disconnect();
                resolve(el);
                return;
            }
            if (preHandlerSelector && preHandlerEvent && !preHandlerProcessed_1) {
                if (el.matches(preHandlerSelector)) {
                    processPreHandler_1(el);
                }
            }
        };
        var observer_1 = new MutationObserver(function (mutations) {
            for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {
                var mutation = mutations_1[_i];
                // eslint-disable-next-line
                // @ts-ignore
                for (var _a = 0, _b = mutation.addedNodes; _a < _b.length; _a++) {
                    var node = _b[_a];
                    // ignore text nodes
                    if (node instanceof HTMLElement) {
                        checkHtmlElement_1(node);
                    }
                }
            }
        });
        observer_1.observe(document.body, {
            childList: true,
            subtree: true,
        });
        if (preHandlerSelector && preHandlerEvent) {
            var preHandlerElement = document.querySelector(preHandlerSelector);
            if (preHandlerElement) {
                processPreHandler_1(preHandlerElement);
            }
        }
    }
}); };
exports.waitForElement = waitForElement;
var getUniqueSelector = function (elem) {
    var path;
    var _loop_1 = function () {
        var subSelector = elem.localName;
        if (!subSelector) {
            return "break";
        }
        subSelector = subSelector.toLowerCase();
        var parent_1 = elem.parentElement;
        if (parent_1) {
            var sameTagSiblings = parent_1.children;
            if (sameTagSiblings.length > 1) {
                var nameCount_1 = 0;
                // eslint-disable-next-line
                // @ts-ignore
                var index = __spreadArray([], sameTagSiblings).findIndex(function (child) {
                    if (elem && elem.localName === child.localName) {
                        nameCount_1++;
                    }
                    return child === elem;
                }) + 1;
                if (index > 1 && nameCount_1 > 1) {
                    subSelector += ':nth-child(' + index + ')';
                }
            }
        }
        path = subSelector + (path ? '>' + path : '');
        elem = parent_1;
    };
    while (elem) {
        var state_1 = _loop_1();
        if (state_1 === "break")
            break;
    }
    return path;
};
exports.getUniqueSelector = getUniqueSelector;
var getPropertySmartTooltip = function (propertyName) {
    var w = window;
    if (w.EpamServices &&
        w.EpamServices._internal &&
        w.EpamServices._internal.interactiveProductsSettings &&
        w.EpamServices._internal.interactiveProductsSettings[propertyName] !== undefined) {
        return w.EpamServices._internal.interactiveProductsSettings[propertyName];
    }
};
exports.getPropertySmartTooltip = getPropertySmartTooltip;
var getAppId = function () { return exports.getPropertySmartTooltip('application'); };
exports.getAppId = getAppId;
var getBaseUrl = function () { return exports.getPropertySmartTooltip('baseUrl') || ''; };
exports.getBaseUrl = getBaseUrl;
var getSmartTooltipEnabled = function () { return exports.getPropertySmartTooltip('isSmartTooltipEnabled'); };
exports.getSmartTooltipEnabled = getSmartTooltipEnabled;
var getUserFeedbackEnabled = function () { return exports.getPropertySmartTooltip('isUserFeedbackEnabled'); };
exports.getUserFeedbackEnabled = getUserFeedbackEnabled;
var isMobile = function () {
    if (window.navigator.userAgent.match(/Android/i) ||
        window.navigator.userAgent.match(/webOS/i) ||
        window.navigator.userAgent.match(/iPhone/i) ||
        window.navigator.userAgent.match(/iPad/i) ||
        window.navigator.userAgent.match(/iPod/i) ||
        window.navigator.userAgent.match(/BlackBerry/i) ||
        window.navigator.userAgent.match(/Windows Phone/i)) {
        return true;
    }
    else {
        return false;
    }
};
exports.isMobile = isMobile;
var urlIsMatchedAnyMask = function (url, urlMasks) {
    if (!urlMasks || urlMasks.length === 0) {
        return true;
    }
    for (var i = 0; i < urlMasks.length; i++) {
        var re = new RegExp("^" + urlMasks[i]);
        if (re.test(url)) {
            return true;
        }
    }
    return false;
};
exports.urlIsMatchedAnyMask = urlIsMatchedAnyMask;
var getCurrentUrlFromLocation = function () {
    return window.location.href.replace(window.location.origin, '');
};
exports.getCurrentUrlFromLocation = getCurrentUrlFromLocation;
var getPopupPosition = function (el, position, offset) {
    if (position === void 0) { position = constants_1.POPUP_POSITIONS.topRight; }
    if (offset === void 0) { offset = 16; }
    var newPosition = {
        top: 'auto',
        left: 'auto',
        bottom: 'auto',
        right: 'auto',
        marginTop: '',
        marginLeft: '',
    };
    if (position === constants_1.POPUP_POSITIONS.center) {
        newPosition.top = '50%';
        newPosition.left = '50%';
        newPosition.bottom = 'auto';
        newPosition.right = 'auto';
        newPosition.marginTop = "-" + Math.ceil(el.offsetHeight / 2) + "px";
        newPosition.marginLeft = "-" + Math.ceil(el.offsetWidth / 2) + "px";
    }
    else if (position === constants_1.POPUP_POSITIONS.topLeft) {
        newPosition.top = offset + "px";
        newPosition.left = offset + "px";
        newPosition.bottom = 'auto';
        newPosition.right = 'auto';
        newPosition.marginTop = '';
        newPosition.marginLeft = '';
    }
    else if (position === constants_1.POPUP_POSITIONS.topRight) {
        newPosition.top = offset + "px";
        newPosition.left = 'auto';
        newPosition.bottom = 'auto';
        newPosition.right = offset + "px";
        newPosition.marginTop = '';
        newPosition.marginLeft = '';
    }
    else if (position === constants_1.POPUP_POSITIONS.bottomLeft) {
        newPosition.top = 'auto';
        newPosition.left = offset + "px";
        newPosition.bottom = offset + "px";
        newPosition.right = 'auto';
        newPosition.marginTop = '';
        newPosition.marginLeft = '';
    }
    else if (position === constants_1.POPUP_POSITIONS.bottomRight) {
        newPosition.top = 'auto';
        newPosition.left = 'auto';
        newPosition.bottom = offset + "px";
        newPosition.right = offset + "px";
        newPosition.marginTop = '';
        newPosition.marginLeft = '';
    }
    return newPosition;
};
exports.getPopupPosition = getPopupPosition;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PostMessageActions = exports.POPUP_POSITIONS = exports.TOOLTIP_POSITIONS = void 0;
exports.TOOLTIP_POSITIONS = {
    auto: 'auto',
    screenCenter: 'screenCenter',
    topStart: 'topStart',
    topCenterContentLeft: 'topCenterContentLeft',
    topCenterContentRight: 'topCenterContentRight',
    topCenter: 'topCenter',
    topEnd: 'topEnd',
    bottomStart: 'bottomStart',
    bottomCenterContentLeft: 'bottomCenterContentLeft',
    bottomCenterContentRight: 'bottomCenterContentRight',
    bottomCenter: 'bottomCenter',
    bottomEnd: 'bottomEnd',
    leftStart: 'leftStart',
    leftCenter: 'leftCenter',
    leftEnd: 'leftEnd',
    rightStart: 'rightStart',
    rightCenter: 'rightCenter',
    rightEnd: 'rightEnd',
    topLeftCorner: 'topLeftCorner',
    topRightCorner: 'topRightCorner',
    bottomLeftCorner: 'bottomLeftCorner',
    bottomRightCorner: 'bottomRightCorner',
    hidden: 'hidden',
};
exports.POPUP_POSITIONS = {
    center: 'center',
    topLeft: 'topLeft',
    topRight: 'topRight',
    bottomLeft: 'bottomLeft',
    bottomRight: 'bottomRight',
};
exports.PostMessageActions = {
    TourIsOver: 'TourIsOver',
    UserInHygiene: 'UserInInteractiveProductsHygiene',
};


/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"container":"_14CGvml","tour":"MBhU5L_","loader":"wm0fZeO","spinner":"_3sxRnWE","loader-an":"_2wJznjZ","skipBtn":"_1iPr6OU","buttons":"_1g9kfrV","prevBtn":"_1Lhu0An"};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.api = exports.setBaseUrl = void 0;
var apiDefinition = __importStar(__webpack_require__(21));
var axios_1 = __importDefault(__webpack_require__(22));
var helpers_1 = __webpack_require__(1);
var baseUrl;
function setBaseUrl(url) {
    baseUrl = url;
}
exports.setBaseUrl = setBaseUrl;
setBaseUrl(helpers_1.getPropertySmartTooltip('baseUrl'));
function processRequest(url, method, data) {
    var conf = getBaseRequestConfig(url);
    conf.method = method;
    if (method !== 'GET') {
        conf.data = data;
    }
    else {
        conf.params = data;
    }
    var requestPromise = axios_1.default.request(conf)
        .then(function (response) {
        return response.data;
    });
    requestPromise.catch(function (e) {
        if (e instanceof axios_1.default.Cancel) {
            console.log('Canceled');
        }
        else {
            console.log('tbd: handle http error');
        }
    });
    return requestPromise;
}
function getBaseRequestConfig(query, cancelToken) {
    var conf = {
        baseURL: baseUrl,
        withCredentials: true,
        url: encodeURI(query)
    };
    if (cancelToken) {
        conf.cancelToken = cancelToken;
    }
    return conf;
}
exports.api = apiDefinition.getApi(processRequest);
window.api = apiDefinition.getApi(function (url, method, data) {
    return processRequest(url, method, data)
        .then(function (response) { console.log(response); return response; });
});


/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var api_1 = __webpack_require__(4);
var constants_1 = __webpack_require__(2);
var MainWindow_1 = __importDefault(__webpack_require__(15));
var TooltipBase = /** @class */ (function (_super) {
    __extends(TooltipBase, _super);
    function TooltipBase() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TooltipBase.prototype.startTour = function () {
        var _this = this;
        this.destroyOtherWindows(this);
        api_1.api.smartTooltipApi
            .startTour({
            systemName: this.app,
            tourId: this.tourId,
            userCustomdataId: this.userCustomDataId || null,
        })
            .then(function (externalId) {
            _this.externalId = externalId;
        });
    };
    TooltipBase.prototype.completeTour = function () {
        this.destroy();
        if (this.tourId > -1 && this.externalId) {
            api_1.api.smartTooltipApi.passTour(this.tourId, this.externalId);
        }
    };
    TooltipBase.prototype.skipTour = function () {
        if (this.tourId > -1 && this.externalId) {
            api_1.api.smartTooltipApi.skipTour(this.tourId, this.externalId);
        }
        this.destroy();
    };
    TooltipBase.prototype.checkPostMessage = function (event) {
        var data = event.data;
        if (data && data.action === constants_1.PostMessageActions.TourIsOver && data.tourId === this.tourId) {
            this.destroy();
        }
        if (data &&
            data.action === constants_1.PostMessageActions.UserInHygiene &&
            data.args &&
            data.args.toolSystemName &&
            data.args.untileTime) {
            // TODO: stop trigger to show tooltips for application {toolSystemName}.
            // Reload tours after time in {untileTime}.
            // const jsDate = new Date(data.args.untileTime * 1000). - conver unixtime without miliseconds to JS Date
            console.dir(data);
        }
    };
    return TooltipBase;
}(MainWindow_1.default));
exports.default = TooltipBase;


/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function bind(fn, thisArg) {
  return function wrap() {
    var args = new Array(arguments.length);
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i];
    }
    return fn.apply(thisArg, args);
  };
};


/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function encode(val) {
  return encodeURIComponent(val).
    replace(/%40/gi, '@').
    replace(/%3A/gi, ':').
    replace(/%24/g, '$').
    replace(/%2C/gi, ',').
    replace(/%20/g, '+').
    replace(/%5B/gi, '[').
    replace(/%5D/gi, ']');
}

/**
 * Build a URL by appending params to the end
 *
 * @param {string} url The base of the url (e.g., http://www.google.com)
 * @param {object} [params] The params to be appended
 * @returns {string} The formatted url
 */
module.exports = function buildURL(url, params, paramsSerializer) {
  /*eslint no-param-reassign:0*/
  if (!params) {
    return url;
  }

  var serializedParams;
  if (paramsSerializer) {
    serializedParams = paramsSerializer(params);
  } else if (utils.isURLSearchParams(params)) {
    serializedParams = params.toString();
  } else {
    var parts = [];

    utils.forEach(params, function serialize(val, key) {
      if (val === null || typeof val === 'undefined') {
        return;
      }

      if (utils.isArray(val)) {
        key = key + '[]';
      } else {
        val = [val];
      }

      utils.forEach(val, function parseValue(v) {
        if (utils.isDate(v)) {
          v = v.toISOString();
        } else if (utils.isObject(v)) {
          v = JSON.stringify(v);
        }
        parts.push(encode(key) + '=' + encode(v));
      });
    });

    serializedParams = parts.join('&');
  }

  if (serializedParams) {
    var hashmarkIndex = url.indexOf('#');
    if (hashmarkIndex !== -1) {
      url = url.slice(0, hashmarkIndex);
    }

    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
  }

  return url;
};


/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = function isCancel(value) {
  return !!(value && value.__CANCEL__);
};


/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

var utils = __webpack_require__(0);
var normalizeHeaderName = __webpack_require__(28);

var DEFAULT_CONTENT_TYPE = {
  'Content-Type': 'application/x-www-form-urlencoded'
};

function setContentTypeIfUnset(headers, value) {
  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
    headers['Content-Type'] = value;
  }
}

function getDefaultAdapter() {
  var adapter;
  if (typeof XMLHttpRequest !== 'undefined') {
    // For browsers use XHR adapter
    adapter = __webpack_require__(10);
  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {
    // For node use HTTP adapter
    adapter = __webpack_require__(10);
  }
  return adapter;
}

var defaults = {
  adapter: getDefaultAdapter(),

  transformRequest: [function transformRequest(data, headers) {
    normalizeHeaderName(headers, 'Accept');
    normalizeHeaderName(headers, 'Content-Type');
    if (utils.isFormData(data) ||
      utils.isArrayBuffer(data) ||
      utils.isBuffer(data) ||
      utils.isStream(data) ||
      utils.isFile(data) ||
      utils.isBlob(data)
    ) {
      return data;
    }
    if (utils.isArrayBufferView(data)) {
      return data.buffer;
    }
    if (utils.isURLSearchParams(data)) {
      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
      return data.toString();
    }
    if (utils.isObject(data)) {
      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
      return JSON.stringify(data);
    }
    return data;
  }],

  transformResponse: [function transformResponse(data) {
    /*eslint no-param-reassign:0*/
    if (typeof data === 'string') {
      try {
        data = JSON.parse(data);
      } catch (e) { /* Ignore */ }
    }
    return data;
  }],

  /**
   * A timeout in milliseconds to abort a request. If set to 0 (default) a
   * timeout is not created.
   */
  timeout: 0,

  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',

  maxContentLength: -1,

  validateStatus: function validateStatus(status) {
    return status >= 200 && status < 300;
  }
};

defaults.headers = {
  common: {
    'Accept': 'application/json, text/plain, */*'
  }
};

utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
  defaults.headers[method] = {};
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
});

module.exports = defaults;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(14)))

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var settle = __webpack_require__(29);
var buildURL = __webpack_require__(7);
var buildFullPath = __webpack_require__(31);
var parseHeaders = __webpack_require__(34);
var isURLSameOrigin = __webpack_require__(35);
var createError = __webpack_require__(11);

module.exports = function xhrAdapter(config) {
  return new Promise(function dispatchXhrRequest(resolve, reject) {
    var requestData = config.data;
    var requestHeaders = config.headers;

    if (utils.isFormData(requestData)) {
      delete requestHeaders['Content-Type']; // Let the browser set it
    }

    var request = new XMLHttpRequest();

    // HTTP basic authentication
    if (config.auth) {
      var username = config.auth.username || '';
      var password = config.auth.password || '';
      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
    }

    var fullPath = buildFullPath(config.baseURL, config.url);
    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);

    // Set the request timeout in MS
    request.timeout = config.timeout;

    // Listen for ready state
    request.onreadystatechange = function handleLoad() {
      if (!request || request.readyState !== 4) {
        return;
      }

      // The request errored out and we didn't get a response, this will be
      // handled by onerror instead
      // With one exception: request that using file: protocol, most browsers
      // will return status as 0 even though it's a successful request
      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
        return;
      }

      // Prepare the response
      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
      var response = {
        data: responseData,
        status: request.status,
        statusText: request.statusText,
        headers: responseHeaders,
        config: config,
        request: request
      };

      settle(resolve, reject, response);

      // Clean up request
      request = null;
    };

    // Handle browser request cancellation (as opposed to a manual cancellation)
    request.onabort = function handleAbort() {
      if (!request) {
        return;
      }

      reject(createError('Request aborted', config, 'ECONNABORTED', request));

      // Clean up request
      request = null;
    };

    // Handle low level network errors
    request.onerror = function handleError() {
      // Real errors are hidden from us by the browser
      // onerror should only fire if it's a network error
      reject(createError('Network Error', config, null, request));

      // Clean up request
      request = null;
    };

    // Handle timeout
    request.ontimeout = function handleTimeout() {
      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';
      if (config.timeoutErrorMessage) {
        timeoutErrorMessage = config.timeoutErrorMessage;
      }
      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',
        request));

      // Clean up request
      request = null;
    };

    // Add xsrf header
    // This is only done if running in a standard browser environment.
    // Specifically not if we're in a web worker, or react-native.
    if (utils.isStandardBrowserEnv()) {
      var cookies = __webpack_require__(36);

      // Add xsrf header
      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?
        cookies.read(config.xsrfCookieName) :
        undefined;

      if (xsrfValue) {
        requestHeaders[config.xsrfHeaderName] = xsrfValue;
      }
    }

    // Add headers to the request
    if ('setRequestHeader' in request) {
      utils.forEach(requestHeaders, function setRequestHeader(val, key) {
        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
          // Remove Content-Type if data is undefined
          delete requestHeaders[key];
        } else {
          // Otherwise add header to the request
          request.setRequestHeader(key, val);
        }
      });
    }

    // Add withCredentials to request if needed
    if (!utils.isUndefined(config.withCredentials)) {
      request.withCredentials = !!config.withCredentials;
    }

    // Add responseType to request if needed
    if (config.responseType) {
      try {
        request.responseType = config.responseType;
      } catch (e) {
        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
        if (config.responseType !== 'json') {
          throw e;
        }
      }
    }

    // Handle progress if needed
    if (typeof config.onDownloadProgress === 'function') {
      request.addEventListener('progress', config.onDownloadProgress);
    }

    // Not all browsers support upload events
    if (typeof config.onUploadProgress === 'function' && request.upload) {
      request.upload.addEventListener('progress', config.onUploadProgress);
    }

    if (config.cancelToken) {
      // Handle cancellation
      config.cancelToken.promise.then(function onCanceled(cancel) {
        if (!request) {
          return;
        }

        request.abort();
        reject(cancel);
        // Clean up request
        request = null;
      });
    }

    if (requestData === undefined) {
      requestData = null;
    }

    // Send the request
    request.send(requestData);
  });
};


/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var enhanceError = __webpack_require__(30);

/**
 * Create an Error with the specified message, config, error code, request and response.
 *
 * @param {string} message The error message.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The created error.
 */
module.exports = function createError(message, config, code, request, response) {
  var error = new Error(message);
  return enhanceError(error, config, code, request, response);
};


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Config-specific merge-function which creates a new config-object
 * by merging two configuration objects together.
 *
 * @param {Object} config1
 * @param {Object} config2
 * @returns {Object} New object resulting from merging config2 to config1
 */
module.exports = function mergeConfig(config1, config2) {
  // eslint-disable-next-line no-param-reassign
  config2 = config2 || {};
  var config = {};

  var valueFromConfig2Keys = ['url', 'method', 'params', 'data'];
  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy'];
  var defaultToConfig2Keys = [
    'baseURL', 'url', 'transformRequest', 'transformResponse', 'paramsSerializer',
    'timeout', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',
    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress',
    'maxContentLength', 'validateStatus', 'maxRedirects', 'httpAgent',
    'httpsAgent', 'cancelToken', 'socketPath'
  ];

  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    }
  });

  utils.forEach(mergeDeepPropertiesKeys, function mergeDeepProperties(prop) {
    if (utils.isObject(config2[prop])) {
      config[prop] = utils.deepMerge(config1[prop], config2[prop]);
    } else if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (utils.isObject(config1[prop])) {
      config[prop] = utils.deepMerge(config1[prop]);
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  var axiosKeys = valueFromConfig2Keys
    .concat(mergeDeepPropertiesKeys)
    .concat(defaultToConfig2Keys);

  var otherKeys = Object
    .keys(config2)
    .filter(function filterAxiosKeys(key) {
      return axiosKeys.indexOf(key) === -1;
    });

  utils.forEach(otherKeys, function otherKeysDefaultToConfig2(prop) {
    if (typeof config2[prop] !== 'undefined') {
      config[prop] = config2[prop];
    } else if (typeof config1[prop] !== 'undefined') {
      config[prop] = config1[prop];
    }
  });

  return config;
};


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * A `Cancel` is an object that is thrown when an operation is canceled.
 *
 * @class
 * @param {string=} message The message.
 */
function Cancel(message) {
  this.message = message;
}

Cancel.prototype.toString = function toString() {
  return 'Cancel' + (this.message ? ': ' + this.message : '');
};

Cancel.prototype.__CANCEL__ = true;

module.exports = Cancel;


/***/ }),
/* 14 */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var MainWindow = /** @class */ (function () {
    function MainWindow() {
        this.containerEl = null;
        this.addedToDOM = false;
        this.urlMatches = true;
        this.observer = null;
    }
    MainWindow.prototype.setUrlMatches = function (value) {
        this.urlMatches = value;
    };
    MainWindow.prototype.createObserver = function () {
        var _this = this;
        this.observer = new MutationObserver(function (mutations) {
            if (_this.urlMatches) {
                for (var _i = 0, mutations_1 = mutations; _i < mutations_1.length; _i++) {
                    var mutation = mutations_1[_i];
                    if (mutation.removedNodes.length) {
                        // @ts-ignore
                        for (var _a = 0, _b = mutation.removedNodes; _a < _b.length; _a++) {
                            var node = _b[_a];
                            if (node instanceof HTMLElement) {
                                _this.onRemoveNode && _this.onRemoveNode(node);
                            }
                        }
                    }
                    if (mutation.addedNodes.length) {
                        _this.onAddNodes && _this.onAddNodes();
                    }
                }
            }
        });
        this.observer.observe(document.body, {
            childList: true,
            subtree: true,
        });
    };
    MainWindow.prototype.deleteObserver = function () {
        if (this.observer) {
            this.observer.disconnect();
            this.observer = null;
        }
    };
    return MainWindow;
}());
exports.default = MainWindow;


/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.questionTypesNames = exports.tourTypesNames = exports.QuestionTypes = exports.TourTypes = void 0;
// This file is auto generated. Dont modify it.
var TourTypes;
(function (TourTypes) {
    TourTypes[TourTypes["SmartTooltip"] = 1] = "SmartTooltip";
    TourTypes[TourTypes["PopUp"] = 2] = "PopUp";
})(TourTypes = exports.TourTypes || (exports.TourTypes = {}));
var QuestionTypes;
(function (QuestionTypes) {
    QuestionTypes[QuestionTypes["Stars"] = 1] = "Stars";
    QuestionTypes[QuestionTypes["FinalMessage"] = 100] = "FinalMessage";
})(QuestionTypes = exports.QuestionTypes || (exports.QuestionTypes = {}));
exports.tourTypesNames = {
    1: 'Smart Tooltip',
    2: 'Pop Up',
};
exports.questionTypesNames = {
    1: 'Stars',
    100: 'Final Message',
};


/***/ }),
/* 17 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/**
 * @this {Promise}
 */
function finallyConstructor(callback) {
  var constructor = this.constructor;
  return this.then(
    function(value) {
      // @ts-ignore
      return constructor.resolve(callback()).then(function() {
        return value;
      });
    },
    function(reason) {
      // @ts-ignore
      return constructor.resolve(callback()).then(function() {
        // @ts-ignore
        return constructor.reject(reason);
      });
    }
  );
}

/* harmony default export */ __webpack_exports__["a"] = (finallyConstructor);


/***/ }),
/* 18 */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || new Function("return this")();
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TooltipTour = void 0;
var common_scss_1 = __importDefault(__webpack_require__(3));
var style_scss_1 = __importDefault(__webpack_require__(20));
var constants_1 = __webpack_require__(2);
var TooltipBase_1 = __importDefault(__webpack_require__(5));
var TooltipTour = /** @class */ (function (_super) {
    __extends(TooltipTour, _super);
    function TooltipTour(tourData, destroyOtherWindows) {
        var _a;
        var _this = _super.call(this) || this;
        _this.backgroundColor = null;
        _this.containerEl = null;
        _this.containerCloneEl = null;
        _this.contentEl = null;
        _this.anchorEl = null;
        _this.visibleOnPage = false;
        _this.urlMatches = true;
        _this.arrowEl = null;
        _this.stepsEl = null;
        _this.tourEl = null;
        _this.headerEl = null;
        _this.footerEl = null;
        _this.titleEl = null;
        _this.buttonsEl = null;
        _this.skipBtn = null;
        _this.nextBtn = null;
        _this.prevBtn = null;
        _this.gotItBtn = null;
        _this.currentStepIndex = 0;
        _this.prevPosition = {
            top: 0,
            left: 0,
            name: constants_1.TOOLTIP_POSITIONS.hidden,
        };
        _this.arrowClasses = (_a = {},
            _a[constants_1.TOOLTIP_POSITIONS.topStart] = style_scss_1.default.arrowBottomStart,
            _a[constants_1.TOOLTIP_POSITIONS.topCenterContentLeft] = style_scss_1.default.arrowBottomEnd,
            _a[constants_1.TOOLTIP_POSITIONS.topCenterContentRight] = style_scss_1.default.arrowBottomStart,
            _a[constants_1.TOOLTIP_POSITIONS.topCenter] = style_scss_1.default.arrowBottomCenter,
            _a[constants_1.TOOLTIP_POSITIONS.topEnd] = style_scss_1.default.arrowBottomEnd,
            _a[constants_1.TOOLTIP_POSITIONS.bottomStart] = style_scss_1.default.arrowTopStart,
            _a[constants_1.TOOLTIP_POSITIONS.bottomCenterContentLeft] = style_scss_1.default.arrowTopEnd,
            _a[constants_1.TOOLTIP_POSITIONS.bottomCenterContentRight] = style_scss_1.default.arrowTopStart,
            _a[constants_1.TOOLTIP_POSITIONS.bottomCenter] = style_scss_1.default.arrowTopCenter,
            _a[constants_1.TOOLTIP_POSITIONS.bottomEnd] = style_scss_1.default.arrowTopEnd,
            _a[constants_1.TOOLTIP_POSITIONS.leftStart] = style_scss_1.default.arrowRightStart,
            _a[constants_1.TOOLTIP_POSITIONS.leftCenter] = style_scss_1.default.arrowRightCenter,
            _a[constants_1.TOOLTIP_POSITIONS.leftEnd] = style_scss_1.default.arrowRightEnd,
            _a[constants_1.TOOLTIP_POSITIONS.rightStart] = style_scss_1.default.arrowLeftStart,
            _a[constants_1.TOOLTIP_POSITIONS.rightCenter] = style_scss_1.default.arrowLeftCenter,
            _a[constants_1.TOOLTIP_POSITIONS.rightEnd] = style_scss_1.default.arrowLeftEnd,
            _a[constants_1.TOOLTIP_POSITIONS.bottomRightCorner] = style_scss_1.default.arrowTopLeftCorner,
            _a[constants_1.TOOLTIP_POSITIONS.bottomLeftCorner] = style_scss_1.default.arrowTopRightCorner,
            _a[constants_1.TOOLTIP_POSITIONS.topLeftCorner] = style_scss_1.default.arrowBottomRightCorner,
            _a[constants_1.TOOLTIP_POSITIONS.topRightCorner] = style_scss_1.default.arrowBottomLeftCorner,
            _a);
        _this.onRemoveNode = function (node) {
            if (_this.anchorEl && (node === _this.anchorEl || node.contains(_this.anchorEl))) {
                _this.closeCurrentStep();
            }
        };
        _this.onAddNodes = function () {
            if (!_this.anchorEl) {
                var step = _this.steps[_this.currentStepIndex];
                if (step.htmlSelector && document.querySelector(step.htmlSelector)) {
                    _this.render();
                }
            }
        };
        var tour = {
            tourId: tourData.tourId,
            externalId: '',
            app: tourData.application || '',
            userCustomDataId: tourData.userCustomDataId,
            tourType: tourData.tourType || '',
            triggerSelector: tourData.triggerSelector || '',
            backgroundColor: tourData.backgroundColor,
            urls: tourData.urls || [],
            steps: tourData.steps || [],
        };
        _this.getHiddenPostion = _this.getHiddenPostion.bind(_this);
        _this.tourId = tour.tourId;
        _this.externalId = tour.externalId;
        _this.app = tour.app;
        _this.backgroundColor = tour.backgroundColor;
        _this.urls = tour.urls;
        _this.userCustomDataId = tour.userCustomDataId;
        _this.steps = tour.steps;
        _this.destroyOtherWindows = destroyOtherWindows;
        _this.prevPosition = _this.getHiddenPostion();
        _this.setPosition = _this.setPosition.bind(_this);
        _this.render = _this.render.bind(_this);
        _this.checkPostMessage = _this.checkPostMessage.bind(_this);
        window.addEventListener("message", _this.checkPostMessage, false);
        _this.createObserver();
        _this.render();
        return _this;
    }
    TooltipTour.prototype.getPosition = function (position, anchorPos) {
        if (position === void 0) { position = constants_1.TOOLTIP_POSITIONS.auto; }
        if (this.containerEl && this.anchorEl && this.arrowEl && this.containerCloneEl) {
            var arrowOffset = 10;
            var margin = 5;
            this.containerCloneEl.style.left = '';
            this.containerCloneEl.style.top = '';
            this.containerCloneEl.style.bottom = '';
            if (position === constants_1.TOOLTIP_POSITIONS.bottomCenter || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_1 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - Math.ceil(this.containerCloneEl.offsetWidth / 2);
                if (this.isFit(top_1, left)) {
                    return { top: top_1, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomCenter };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomCenterContentLeft || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_2 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_2, left)) {
                    return { top: top_2, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomCenterContentLeft };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomCenterContentRight || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_3 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - margin;
                if (this.isFit(top_3, left)) {
                    return { top: top_3, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomCenterContentRight };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomEnd || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_4 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.right - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_4, left)) {
                    return { top: top_4, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomEnd };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomStart || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_5 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.left - margin;
                if (this.isFit(top_5, left)) {
                    return { top: top_5, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomStart };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.rightCenter || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_6 = anchorPos.top + Math.ceil(anchorPos.height / 2) - Math.ceil(this.containerCloneEl.offsetHeight / 2);
                var left = anchorPos.right + arrowOffset;
                if (this.isFit(top_6, left)) {
                    return { top: top_6, left: left, name: constants_1.TOOLTIP_POSITIONS.rightCenter };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.rightStart || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_7 = anchorPos.top - margin;
                var left = anchorPos.right + arrowOffset;
                if (this.isFit(top_7, left)) {
                    return { top: top_7, left: left, name: constants_1.TOOLTIP_POSITIONS.rightStart };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.rightEnd || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_8 = anchorPos.bottom - this.containerCloneEl.offsetHeight + margin;
                var left = anchorPos.right + arrowOffset;
                if (this.isFit(top_8, left)) {
                    return { top: top_8, left: left, name: constants_1.TOOLTIP_POSITIONS.rightEnd };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.leftCenter || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_9 = anchorPos.top + Math.ceil(anchorPos.height / 2) - Math.ceil(this.containerCloneEl.offsetHeight / 2);
                var left = anchorPos.left - this.containerCloneEl.offsetWidth - arrowOffset;
                if (this.isFit(top_9, left)) {
                    return { top: top_9, left: left, name: constants_1.TOOLTIP_POSITIONS.leftCenter };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.leftStart || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_10 = anchorPos.top - margin;
                var left = anchorPos.left - this.containerCloneEl.offsetWidth - arrowOffset;
                if (this.isFit(top_10, left)) {
                    return { top: top_10, left: left, name: constants_1.TOOLTIP_POSITIONS.leftStart };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.leftEnd || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_11 = anchorPos.bottom - this.containerCloneEl.offsetHeight + margin;
                var left = anchorPos.left - this.containerCloneEl.offsetWidth - arrowOffset;
                if (this.isFit(top_11, left)) {
                    return { top: top_11, left: left, name: constants_1.TOOLTIP_POSITIONS.leftEnd };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topCenter || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_12 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - Math.ceil(this.containerCloneEl.offsetWidth / 2);
                if (this.isFit(top_12, left)) {
                    return { top: top_12, left: left, name: constants_1.TOOLTIP_POSITIONS.topCenter };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topCenterContentLeft || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_13 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_13, left)) {
                    return { top: top_13, left: left, name: constants_1.TOOLTIP_POSITIONS.topCenterContentLeft };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topCenterContentRight || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_14 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left + Math.ceil(anchorPos.width / 2) - margin;
                if (this.isFit(top_14, left)) {
                    return { top: top_14, left: left, name: constants_1.TOOLTIP_POSITIONS.topCenterContentRight };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topEnd || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_15 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.right - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_15, left)) {
                    return { top: top_15, left: left, name: constants_1.TOOLTIP_POSITIONS.topEnd };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topStart || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_16 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left - margin;
                if (this.isFit(top_16, left)) {
                    return { top: top_16, left: left, name: constants_1.TOOLTIP_POSITIONS.topStart };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomLeftCorner || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_17 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.left - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_17, left)) {
                    return { top: top_17, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomLeftCorner };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.bottomRightCorner || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_18 = anchorPos.bottom + arrowOffset;
                var left = anchorPos.right - margin;
                if (this.isFit(top_18, left)) {
                    return { top: top_18, left: left, name: constants_1.TOOLTIP_POSITIONS.bottomRightCorner };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topRightCorner || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_19 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left + anchorPos.width - margin;
                if (this.isFit(top_19, left)) {
                    return { top: top_19, left: left, name: constants_1.TOOLTIP_POSITIONS.topRightCorner };
                }
            }
            if (position === constants_1.TOOLTIP_POSITIONS.topLeftCorner || position == constants_1.TOOLTIP_POSITIONS.auto) {
                var top_20 = anchorPos.top - this.containerCloneEl.offsetHeight - arrowOffset;
                var left = anchorPos.left - this.containerCloneEl.offsetWidth + margin;
                if (this.isFit(top_20, left)) {
                    return { top: top_20, left: left, name: constants_1.TOOLTIP_POSITIONS.topLeftCorner };
                }
            }
            if (position !== constants_1.TOOLTIP_POSITIONS.auto) {
                return this.getPosition(constants_1.TOOLTIP_POSITIONS.auto, anchorPos);
            }
        }
        return this.getHiddenPostion();
    };
    TooltipTour.prototype.isFit = function (top, left) {
        if (!this.containerCloneEl) {
            return false;
        }
        if (top < 0) {
            return false;
        }
        if (left < 0) {
            return false;
        }
        if (top + this.containerCloneEl.offsetHeight > document.documentElement.clientHeight) {
            return false;
        }
        if (left + this.containerCloneEl.offsetWidth > document.documentElement.clientWidth) {
            return false;
        }
        return true;
    };
    TooltipTour.prototype.setPosition = function () {
        var _this = this;
        if (!this.containerEl || !this.arrowEl || !this.anchorEl) {
            return;
        }
        var anchorPos = this.anchorEl.getBoundingClientRect();
        var anchorStyles = window.getComputedStyle(this.anchorEl);
        var anchorIsCoveredByAnotherElement = function () {
            var left = anchorPos.left + 1;
            var top = anchorPos.top + 1;
            var right = anchorPos.right - 1;
            var bottom = anchorPos.bottom - 1;
            var hasChild = function (el) {
                return _this.anchorEl.contains(el) || _this.containerEl.contains(el);
            };
            if (hasChild(document.elementFromPoint(left, top))) {
                return false;
            }
            if (hasChild(document.elementFromPoint(right, top))) {
                return false;
            }
            if (hasChild(document.elementFromPoint(left, bottom))) {
                return false;
            }
            if (hasChild(document.elementFromPoint(right, bottom))) {
                return false;
            }
            if (hasChild(document.elementFromPoint(left + anchorPos.width / 2, top + anchorPos.height / 2))) {
                return false;
            }
            return true;
        };
        var isAnchorVisibleOnPage = function () {
            if (!_this.anchorEl) {
                return false;
            }
            if (anchorPos.bottom < 0 || anchorPos.top > document.documentElement.clientHeight) {
                return false;
            }
            if (anchorPos.right < 0 || anchorPos.left > document.documentElement.clientWidth) {
                return false;
            }
            if (anchorPos.width === 0 || anchorPos.height === 0) {
                return false;
            }
            if (anchorStyles.visibility !== 'visible' || anchorStyles.display === 'none') {
                return false;
            }
            if (anchorIsCoveredByAnotherElement()) {
                return false;
            }
            return true;
        };
        var position = isAnchorVisibleOnPage()
            ? this.getPosition(constants_1.TOOLTIP_POSITIONS.auto, anchorPos)
            : this.getHiddenPostion();
        if (this.prevPosition.left === position.left &&
            this.prevPosition.top === position.top &&
            this.prevPosition.name === position.name) {
            return;
        }
        this.prevPosition = position;
        this.arrowEl.className = '';
        if (position.name === constants_1.TOOLTIP_POSITIONS.hidden) {
            this.containerEl.style.left = '';
            this.containerEl.style.top = '';
            this.containerEl.style.bottom = '';
            this.arrowEl.innerHTML = '';
        }
        else {
            this.containerEl.style.top = position.top + "px";
            this.containerEl.style.left = position.left + "px";
            this.containerEl.style.bottom = '';
            if (!this.visibleOnPage) {
                this.visibleOnPage = true;
                this.startTour();
            }
            var svgArrow = '';
            if (position.name.indexOf('Center') >= 0 && position.name.indexOf('Content') === -1) {
                svgArrow = "\n            <svg viewBox=\"0 0 32 32\" width=\"32\" height=\"32\" preserveAspectRatio=\"xMidYMid meet\">\n              <g stroke=\"none\" stroke-width=\"1\">\n                <g transform=\"translate(-682.000000, -440.000000)\">\n                  <g transform=\"translate(539.000000, 341.000000)\">\n                    <rect transform=\"translate(159.000000, 115.000000) rotate(-45.000000) translate(-159.000000, -115.000000) \" x=\"147.5\" y=\"103.5\" width=\"23\" height=\"23\"></rect>\n                  </g>\n                </g>\n              </g>\n            </svg>\n          ";
            }
            else {
                svgArrow = "\n            <svg viewBox=\"0 0 26 22\" width=\"25\" height=\"21\" preserveAspectRatio=\"xMidYMid meet\">\n              <g stroke=\"none\" stroke-width=\"1\">\n                <g transform=\"translate(-1170.000000, -324.000000)\">\n                  <g transform=\"translate(879.000000, 324.000000)\">\n                    <path d=\"M316.009444,0 L316.009444,21.1787109 C310.292648,12.4639893 301.973373,8.10662842 291.05162,8.10662842 C290.259731,8.10662842 298.579006,5.40441895 316.009444,0 Z\" id=\"Path_BG\" transform=\"translate(303.504722, 10.589355) scale(-1, 1) rotate(-180.000000) translate(-303.504722, -10.589355) \"></path>\n                  </g>\n                </g>\n              </g>\n            </svg>\n          ";
            }
            this.arrowEl.innerHTML = svgArrow;
            this.arrowEl.classList.add(style_scss_1.default.arrow);
            this.arrowEl.classList.add(this.arrowClasses[position.name]);
            if (this.backgroundColor) {
                this.arrowEl.style.fill = this.backgroundColor;
            }
        }
    };
    TooltipTour.prototype.render = function (scrollToAnchor) {
        var _this = this;
        if (scrollToAnchor === void 0) { scrollToAnchor = false; }
        var step = this.steps[this.currentStepIndex];
        if (step.htmlSelector) {
            this.anchorEl = document.querySelector(step.htmlSelector);
        }
        if (!this.anchorEl) {
            return;
        }
        if (this.addedToDOM) {
            this.setPosition();
            return;
        }
        this.containerEl = document.createElement('div');
        this.containerEl.classList.add(common_scss_1.default.container);
        this.tourEl = document.createElement('div');
        this.tourEl.classList.add(common_scss_1.default.tour);
        this.containerEl.appendChild(this.tourEl);
        this.arrowEl = document.createElement('div');
        this.arrowEl.classList.add(style_scss_1.default.arrow);
        this.tourEl.appendChild(this.arrowEl);
        if (step.previewImage) {
            var previewImageEl_1 = document.createElement('img');
            previewImageEl_1.classList.add(style_scss_1.default.previewImage);
            previewImageEl_1.src = step.previewImage;
            var loaderEl_1 = document.createElement('div');
            loaderEl_1.classList.add(style_scss_1.default.loaderContainer);
            loaderEl_1.innerHTML = "\n          <div class=\"" + common_scss_1.default.loader + "\">\n            <div class=\"" + common_scss_1.default.spinner + "\">\n              <div></div>\n            </div>\n          </div>\n        ";
            this.tourEl.appendChild(loaderEl_1);
            previewImageEl_1.onload = function () {
                var _a, _b;
                (_a = _this.tourEl) === null || _a === void 0 ? void 0 : _a.insertBefore(previewImageEl_1, loaderEl_1);
                (_b = _this.tourEl) === null || _b === void 0 ? void 0 : _b.removeChild(loaderEl_1);
                if (_this.containerCloneEl && _this.containerEl) {
                    _this.containerCloneEl.innerHTML = _this.containerEl.innerHTML;
                }
                _this.setPosition();
            };
        }
        this.headerEl = document.createElement('div');
        this.headerEl.classList.add(style_scss_1.default.header);
        this.tourEl.appendChild(this.headerEl);
        this.contentEl = document.createElement('div');
        this.contentEl.classList.add(style_scss_1.default.content);
        this.contentEl.innerHTML = step.messageBody || '';
        this.tourEl.appendChild(this.contentEl);
        if (step.messageHeader) {
            this.titleEl = document.createElement('h3');
            this.titleEl.classList.add(style_scss_1.default.title);
            this.titleEl.innerHTML = step.messageHeader;
            this.headerEl.appendChild(this.titleEl);
        }
        if (this.steps.length > 1) {
            this.stepsEl = document.createElement('div');
            this.stepsEl.classList.add(style_scss_1.default.steps);
            this.stepsEl.innerHTML = this.currentStepIndex + 1 + " of " + (this.steps && this.steps.length);
            this.headerEl.appendChild(this.stepsEl);
        }
        this.footerEl = document.createElement('div');
        this.footerEl.classList.add(style_scss_1.default.footer);
        this.tourEl.appendChild(this.footerEl);
        this.buttonsEl = document.createElement('div');
        this.buttonsEl.classList.add(common_scss_1.default.buttons);
        this.skipBtn = document.createElement('button');
        this.skipBtn.classList.add(common_scss_1.default.skipBtn);
        this.skipBtn.innerHTML = 'Skip tour';
        this.skipBtn.onclick = function () { return _this.skipTour(); };
        this.nextBtn = document.createElement('button');
        this.nextBtn.innerHTML = 'Next';
        this.nextBtn.onclick = function () { return _this.nextStep(); };
        this.prevBtn = document.createElement('button');
        this.prevBtn.innerHTML = 'Previous';
        this.prevBtn.classList.add(common_scss_1.default.prevBtn);
        this.prevBtn.onclick = function () { return _this.prevStep(); };
        this.gotItBtn = document.createElement('button');
        this.gotItBtn.innerHTML = 'Got it';
        this.gotItBtn.onclick = function () { return _this.completeTour(); };
        if (this.currentStepIndex === this.steps.length - 1) {
            if (this.steps.length > 1) {
                this.buttonsEl.appendChild(this.prevBtn);
            }
            this.buttonsEl.appendChild(this.gotItBtn);
        }
        else if (this.currentStepIndex === 0) {
            this.footerEl.appendChild(this.skipBtn);
            this.buttonsEl.appendChild(this.nextBtn);
        }
        else {
            this.footerEl.appendChild(this.skipBtn);
            this.buttonsEl.appendChild(this.prevBtn);
            this.buttonsEl.appendChild(this.nextBtn);
        }
        this.footerEl.appendChild(this.buttonsEl);
        if (this.backgroundColor) {
            this.tourEl.style.background = this.backgroundColor;
            this.nextBtn.style.color = this.backgroundColor;
            this.gotItBtn.style.color = this.backgroundColor;
        }
        document.body.appendChild(this.containerEl);
        // needed to calculate position without touching the container
        // if you set top and left to '' and after new TOOLTIP_POSITIONS you can see bliking.
        this.containerCloneEl = this.containerEl.cloneNode(true);
        if (this.containerCloneEl) {
            document.body.appendChild(this.containerCloneEl);
        }
        this.setPosition();
        this.addedToDOM = true;
        if (scrollToAnchor) {
            this.anchorEl.scrollIntoView({ block: "center", behavior: "smooth" });
        }
        window.addEventListener('resize', this.setPosition);
        document.addEventListener('scroll', this.setPosition, true);
        this.checkingTimer = setInterval(this.setPosition, 500);
    };
    TooltipTour.prototype.closeCurrentStep = function () {
        if (this.containerEl) {
            document.body.removeChild(this.containerEl);
            this.containerEl = null;
            this.prevPosition = this.getHiddenPostion();
        }
        if (this.containerCloneEl) {
            document.body.removeChild(this.containerCloneEl);
            this.containerCloneEl = null;
        }
        if (this.anchorEl) {
            this.anchorEl = null;
        }
        this.addedToDOM = false;
        window.removeEventListener('resize', this.setPosition);
        document.removeEventListener('scroll', this.setPosition, true);
        clearInterval(this.checkingTimer);
    };
    TooltipTour.prototype.prevStep = function () {
        this.currentStepIndex -= 1;
        this.closeCurrentStep();
        this.render(true);
    };
    TooltipTour.prototype.nextStep = function () {
        this.currentStepIndex += 1;
        this.closeCurrentStep();
        this.render(true);
    };
    TooltipTour.prototype.destroy = function () {
        this.closeCurrentStep();
        window.removeEventListener('message', this.checkPostMessage);
        this.deleteObserver();
        this.onDestroy && this.onDestroy();
    };
    TooltipTour.prototype.getHiddenPostion = function () {
        return {
            top: 0,
            left: 0,
            name: constants_1.TOOLTIP_POSITIONS.hidden,
        };
    };
    return TooltipTour;
}(TooltipBase_1.default));
exports.TooltipTour = TooltipTour;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"header":"_39mQHhW","footer":"_2JIclUd","content":"L61b-QV","loaderContainer":"_14bylN6","previewImage":"_2fBJwaE","title":"_2So70E8","steps":"_2rLvA-3","arrow":"-_Rf87e","arrowTopStart":"_3A8moD6","arrowTopLeftCorner":"_1eKTE72","arrowTopEnd":"_2soPkqI","arrowTopRightCorner":"NWqmuTb","arrowBottomStart":"_8trvWiJ","arrowBottomLeftCorner":"_2l4jwoF","arrowBottomEnd":"_152nKIe","arrowBottomRightCorner":"_3hEzpCN","arrowLeftStart":"_1jttyub","arrowLeftEnd":"G2HecDE","arrowRightStart":"_3-Q7XgB","arrowRightEnd":"_2Xw5P94","arrowTopCenter":"_2FUvEo6","arrowBottomCenter":"_2hbJ9dH","arrowLeftCenter":"_20zpIz6","arrowRightCenter":"i98L4CH","noArrow":"_9OlIjJR"};

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.getApi = void 0;
function getApi(processRequest) {
    return {
        smartTooltipApi: {
            getTour: function (model) {
                return processRequest("/api/smart-tooltip", "GET", model);
            },
            startTour: function (model) {
                return processRequest("/api/smart-tooltip/start", "GET", model);
            },
            passTour: function (tourId, externalId) {
                return processRequest("/api/smart-tooltip/pass", "GET", {
                    tourId: tourId,
                    externalId: externalId,
                });
            },
            skipTour: function (tourId, externalId) {
                return processRequest("/api/smart-tooltip/skip", "GET", {
                    tourId: tourId,
                    externalId: externalId,
                });
            }
        },
        userFeedbackApi: {
            getFeedbacks: function (systemName) {
                return processRequest("/api/user-feedback", "GET", {
                    systemName: systemName,
                });
            },
            getQuestions: function (feedbackId, model) {
                return processRequest("/api/user-feedback/" + feedbackId + "/questions", "GET", model);
            },
            setAnswer: function (answer) {
                return processRequest("/api/user-feedback/answer", "GET", answer);
            },
            startFeedback: function (model) {
                return processRequest("/api/user-feedback/start", "GET", model);
            },
            passFeedback: function (feedbackId, externalId) {
                return processRequest("/api/user-feedback/pass", "GET", {
                    feedbackId: feedbackId,
                    externalId: externalId,
                });
            },
            skipFeedback: function (feedbackId, externalId) {
                return processRequest("/api/user-feedback/skip", "GET", {
                    feedbackId: feedbackId,
                    externalId: externalId,
                });
            }
        }
    };
}
exports.getApi = getApi;


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(23);

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var bind = __webpack_require__(6);
var Axios = __webpack_require__(24);
var mergeConfig = __webpack_require__(12);
var defaults = __webpack_require__(9);

/**
 * Create an instance of Axios
 *
 * @param {Object} defaultConfig The default config for the instance
 * @return {Axios} A new instance of Axios
 */
function createInstance(defaultConfig) {
  var context = new Axios(defaultConfig);
  var instance = bind(Axios.prototype.request, context);

  // Copy axios.prototype to instance
  utils.extend(instance, Axios.prototype, context);

  // Copy context to instance
  utils.extend(instance, context);

  return instance;
}

// Create the default instance to be exported
var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
axios.Axios = Axios;

// Factory for creating new instances
axios.create = function create(instanceConfig) {
  return createInstance(mergeConfig(axios.defaults, instanceConfig));
};

// Expose Cancel & CancelToken
axios.Cancel = __webpack_require__(13);
axios.CancelToken = __webpack_require__(37);
axios.isCancel = __webpack_require__(8);

// Expose all/spread
axios.all = function all(promises) {
  return Promise.all(promises);
};
axios.spread = __webpack_require__(38);

module.exports = axios;

// Allow use of default import syntax in TypeScript
module.exports.default = axios;


/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var buildURL = __webpack_require__(7);
var InterceptorManager = __webpack_require__(25);
var dispatchRequest = __webpack_require__(26);
var mergeConfig = __webpack_require__(12);

/**
 * Create a new instance of Axios
 *
 * @param {Object} instanceConfig The default config for the instance
 */
function Axios(instanceConfig) {
  this.defaults = instanceConfig;
  this.interceptors = {
    request: new InterceptorManager(),
    response: new InterceptorManager()
  };
}

/**
 * Dispatch a request
 *
 * @param {Object} config The config specific for this request (merged with this.defaults)
 */
Axios.prototype.request = function request(config) {
  /*eslint no-param-reassign:0*/
  // Allow for axios('example/url'[, config]) a la fetch API
  if (typeof config === 'string') {
    config = arguments[1] || {};
    config.url = arguments[0];
  } else {
    config = config || {};
  }

  config = mergeConfig(this.defaults, config);

  // Set config.method
  if (config.method) {
    config.method = config.method.toLowerCase();
  } else if (this.defaults.method) {
    config.method = this.defaults.method.toLowerCase();
  } else {
    config.method = 'get';
  }

  // Hook up interceptors middleware
  var chain = [dispatchRequest, undefined];
  var promise = Promise.resolve(config);

  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
    chain.unshift(interceptor.fulfilled, interceptor.rejected);
  });

  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
    chain.push(interceptor.fulfilled, interceptor.rejected);
  });

  while (chain.length) {
    promise = promise.then(chain.shift(), chain.shift());
  }

  return promise;
};

Axios.prototype.getUri = function getUri(config) {
  config = mergeConfig(this.defaults, config);
  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\?/, '');
};

// Provide aliases for supported request methods
utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url
    }));
  };
});

utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
  /*eslint func-names:0*/
  Axios.prototype[method] = function(url, data, config) {
    return this.request(utils.merge(config || {}, {
      method: method,
      url: url,
      data: data
    }));
  };
});

module.exports = Axios;


/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

function InterceptorManager() {
  this.handlers = [];
}

/**
 * Add a new interceptor to the stack
 *
 * @param {Function} fulfilled The function to handle `then` for a `Promise`
 * @param {Function} rejected The function to handle `reject` for a `Promise`
 *
 * @return {Number} An ID used to remove interceptor later
 */
InterceptorManager.prototype.use = function use(fulfilled, rejected) {
  this.handlers.push({
    fulfilled: fulfilled,
    rejected: rejected
  });
  return this.handlers.length - 1;
};

/**
 * Remove an interceptor from the stack
 *
 * @param {Number} id The ID that was returned by `use`
 */
InterceptorManager.prototype.eject = function eject(id) {
  if (this.handlers[id]) {
    this.handlers[id] = null;
  }
};

/**
 * Iterate over all the registered interceptors
 *
 * This method is particularly useful for skipping over any
 * interceptors that may have become `null` calling `eject`.
 *
 * @param {Function} fn The function to call for each interceptor
 */
InterceptorManager.prototype.forEach = function forEach(fn) {
  utils.forEach(this.handlers, function forEachHandler(h) {
    if (h !== null) {
      fn(h);
    }
  });
};

module.exports = InterceptorManager;


/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);
var transformData = __webpack_require__(27);
var isCancel = __webpack_require__(8);
var defaults = __webpack_require__(9);

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
function throwIfCancellationRequested(config) {
  if (config.cancelToken) {
    config.cancelToken.throwIfRequested();
  }
}

/**
 * Dispatch a request to the server using the configured adapter.
 *
 * @param {object} config The config that is to be used for the request
 * @returns {Promise} The Promise to be fulfilled
 */
module.exports = function dispatchRequest(config) {
  throwIfCancellationRequested(config);

  // Ensure headers exist
  config.headers = config.headers || {};

  // Transform request data
  config.data = transformData(
    config.data,
    config.headers,
    config.transformRequest
  );

  // Flatten headers
  config.headers = utils.merge(
    config.headers.common || {},
    config.headers[config.method] || {},
    config.headers
  );

  utils.forEach(
    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
    function cleanHeaderConfig(method) {
      delete config.headers[method];
    }
  );

  var adapter = config.adapter || defaults.adapter;

  return adapter(config).then(function onAdapterResolution(response) {
    throwIfCancellationRequested(config);

    // Transform response data
    response.data = transformData(
      response.data,
      response.headers,
      config.transformResponse
    );

    return response;
  }, function onAdapterRejection(reason) {
    if (!isCancel(reason)) {
      throwIfCancellationRequested(config);

      // Transform response data
      if (reason && reason.response) {
        reason.response.data = transformData(
          reason.response.data,
          reason.response.headers,
          config.transformResponse
        );
      }
    }

    return Promise.reject(reason);
  });
};


/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

/**
 * Transform the data for a request or a response
 *
 * @param {Object|String} data The data to be transformed
 * @param {Array} headers The headers for the request or response
 * @param {Array|Function} fns A single function or Array of functions
 * @returns {*} The resulting transformed data
 */
module.exports = function transformData(data, headers, fns) {
  /*eslint no-param-reassign:0*/
  utils.forEach(fns, function transform(fn) {
    data = fn(data, headers);
  });

  return data;
};


/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = function normalizeHeaderName(headers, normalizedName) {
  utils.forEach(headers, function processHeader(value, name) {
    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
      headers[normalizedName] = value;
      delete headers[name];
    }
  });
};


/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var createError = __webpack_require__(11);

/**
 * Resolve or reject a Promise based on response status.
 *
 * @param {Function} resolve A function that resolves the promise.
 * @param {Function} reject A function that rejects the promise.
 * @param {object} response The response.
 */
module.exports = function settle(resolve, reject, response) {
  var validateStatus = response.config.validateStatus;
  if (!validateStatus || validateStatus(response.status)) {
    resolve(response);
  } else {
    reject(createError(
      'Request failed with status code ' + response.status,
      response.config,
      null,
      response.request,
      response
    ));
  }
};


/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Update an Error with the specified config, error code, and response.
 *
 * @param {Error} error The error to update.
 * @param {Object} config The config.
 * @param {string} [code] The error code (for example, 'ECONNABORTED').
 * @param {Object} [request] The request.
 * @param {Object} [response] The response.
 * @returns {Error} The error.
 */
module.exports = function enhanceError(error, config, code, request, response) {
  error.config = config;
  if (code) {
    error.code = code;
  }

  error.request = request;
  error.response = response;
  error.isAxiosError = true;

  error.toJSON = function() {
    return {
      // Standard
      message: this.message,
      name: this.name,
      // Microsoft
      description: this.description,
      number: this.number,
      // Mozilla
      fileName: this.fileName,
      lineNumber: this.lineNumber,
      columnNumber: this.columnNumber,
      stack: this.stack,
      // Axios
      config: this.config,
      code: this.code
    };
  };
  return error;
};


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var isAbsoluteURL = __webpack_require__(32);
var combineURLs = __webpack_require__(33);

/**
 * Creates a new URL by combining the baseURL with the requestedURL,
 * only when the requestedURL is not already an absolute URL.
 * If the requestURL is absolute, this function returns the requestedURL untouched.
 *
 * @param {string} baseURL The base URL
 * @param {string} requestedURL Absolute or relative URL to combine
 * @returns {string} The combined full path
 */
module.exports = function buildFullPath(baseURL, requestedURL) {
  if (baseURL && !isAbsoluteURL(requestedURL)) {
    return combineURLs(baseURL, requestedURL);
  }
  return requestedURL;
};


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Determines whether the specified URL is absolute
 *
 * @param {string} url The URL to test
 * @returns {boolean} True if the specified URL is absolute, otherwise false
 */
module.exports = function isAbsoluteURL(url) {
  // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
  // by any combination of letters, digits, plus, period, or hyphen.
  return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
};


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Creates a new URL by combining the specified URLs
 *
 * @param {string} baseURL The base URL
 * @param {string} relativeURL The relative URL
 * @returns {string} The combined URL
 */
module.exports = function combineURLs(baseURL, relativeURL) {
  return relativeURL
    ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
    : baseURL;
};


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
var ignoreDuplicateOf = [
  'age', 'authorization', 'content-length', 'content-type', 'etag',
  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
  'last-modified', 'location', 'max-forwards', 'proxy-authorization',
  'referer', 'retry-after', 'user-agent'
];

/**
 * Parse headers into an object
 *
 * ```
 * Date: Wed, 27 Aug 2014 08:58:49 GMT
 * Content-Type: application/json
 * Connection: keep-alive
 * Transfer-Encoding: chunked
 * ```
 *
 * @param {String} headers Headers needing to be parsed
 * @returns {Object} Headers parsed into an object
 */
module.exports = function parseHeaders(headers) {
  var parsed = {};
  var key;
  var val;
  var i;

  if (!headers) { return parsed; }

  utils.forEach(headers.split('\n'), function parser(line) {
    i = line.indexOf(':');
    key = utils.trim(line.substr(0, i)).toLowerCase();
    val = utils.trim(line.substr(i + 1));

    if (key) {
      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
        return;
      }
      if (key === 'set-cookie') {
        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
      } else {
        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
      }
    }
  });

  return parsed;
};


/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs have full support of the APIs needed to test
  // whether the request URL is of the same origin as current location.
    (function standardBrowserEnv() {
      var msie = /(msie|trident)/i.test(navigator.userAgent);
      var urlParsingNode = document.createElement('a');
      var originURL;

      /**
    * Parse a URL to discover it's components
    *
    * @param {String} url The URL to be parsed
    * @returns {Object}
    */
      function resolveURL(url) {
        var href = url;

        if (msie) {
        // IE needs attribute set twice to normalize properties
          urlParsingNode.setAttribute('href', href);
          href = urlParsingNode.href;
        }

        urlParsingNode.setAttribute('href', href);

        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
        return {
          href: urlParsingNode.href,
          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
          host: urlParsingNode.host,
          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
          hostname: urlParsingNode.hostname,
          port: urlParsingNode.port,
          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
            urlParsingNode.pathname :
            '/' + urlParsingNode.pathname
        };
      }

      originURL = resolveURL(window.location.href);

      /**
    * Determine if a URL shares the same origin as the current location
    *
    * @param {String} requestURL The URL to test
    * @returns {boolean} True if URL shares the same origin, otherwise false
    */
      return function isURLSameOrigin(requestURL) {
        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
        return (parsed.protocol === originURL.protocol &&
            parsed.host === originURL.host);
      };
    })() :

  // Non standard browser envs (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return function isURLSameOrigin() {
        return true;
      };
    })()
);


/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(0);

module.exports = (
  utils.isStandardBrowserEnv() ?

  // Standard browser envs support document.cookie
    (function standardBrowserEnv() {
      return {
        write: function write(name, value, expires, path, domain, secure) {
          var cookie = [];
          cookie.push(name + '=' + encodeURIComponent(value));

          if (utils.isNumber(expires)) {
            cookie.push('expires=' + new Date(expires).toGMTString());
          }

          if (utils.isString(path)) {
            cookie.push('path=' + path);
          }

          if (utils.isString(domain)) {
            cookie.push('domain=' + domain);
          }

          if (secure === true) {
            cookie.push('secure');
          }

          document.cookie = cookie.join('; ');
        },

        read: function read(name) {
          var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
          return (match ? decodeURIComponent(match[3]) : null);
        },

        remove: function remove(name) {
          this.write(name, '', Date.now() - 86400000);
        }
      };
    })() :

  // Non standard browser env (web workers, react-native) lack needed support.
    (function nonStandardBrowserEnv() {
      return {
        write: function write() {},
        read: function read() { return null; },
        remove: function remove() {}
      };
    })()
);


/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Cancel = __webpack_require__(13);

/**
 * A `CancelToken` is an object that can be used to request cancellation of an operation.
 *
 * @class
 * @param {Function} executor The executor function.
 */
function CancelToken(executor) {
  if (typeof executor !== 'function') {
    throw new TypeError('executor must be a function.');
  }

  var resolvePromise;
  this.promise = new Promise(function promiseExecutor(resolve) {
    resolvePromise = resolve;
  });

  var token = this;
  executor(function cancel(message) {
    if (token.reason) {
      // Cancellation has already been requested
      return;
    }

    token.reason = new Cancel(message);
    resolvePromise(token.reason);
  });
}

/**
 * Throws a `Cancel` if cancellation has been requested.
 */
CancelToken.prototype.throwIfRequested = function throwIfRequested() {
  if (this.reason) {
    throw this.reason;
  }
};

/**
 * Returns an object that contains a new `CancelToken` and a function that, when called,
 * cancels the `CancelToken`.
 */
CancelToken.source = function source() {
  var cancel;
  var token = new CancelToken(function executor(c) {
    cancel = c;
  });
  return {
    token: token,
    cancel: cancel
  };
};

module.exports = CancelToken;


/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/**
 * Syntactic sugar for invoking a function and expanding an array for arguments.
 *
 * Common use case would be to use `Function.prototype.apply`.
 *
 *  ```js
 *  function f(x, y, z) {}
 *  var args = [1, 2, 3];
 *  f.apply(null, args);
 *  ```
 *
 * With `spread` this example can be re-written.
 *
 *  ```js
 *  spread(function(x, y, z) {})([1, 2, 3]);
 *  ```
 *
 * @param {Function} callback
 * @returns {Function}
 */
module.exports = function spread(callback) {
  return function wrap(arr) {
    return callback.apply(null, arr);
  };
};


/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.PopupTour = void 0;
var helpers_1 = __webpack_require__(1);
var common_scss_1 = __importDefault(__webpack_require__(3));
var style_scss_1 = __importDefault(__webpack_require__(40));
var TooltipBase_1 = __importDefault(__webpack_require__(5));
var PopupTour = /** @class */ (function (_super) {
    __extends(PopupTour, _super);
    function PopupTour(tourData, destroyOtherWindows) {
        var _this = _super.call(this) || this;
        _this.containerEl = null;
        _this.contentEl = null;
        _this.stepsEl = null;
        _this.title = null;
        _this.footerEl = null;
        _this.triggerEl = null;
        _this.triggerSelector = null;
        _this.backgroundColor = null;
        _this.buttonsEl = null;
        _this.skipBtn = null;
        _this.nextBtn = null;
        _this.prevBtn = null;
        _this.gotItBtn = null;
        _this.urlMatches = true;
        _this.steps = [];
        _this.currentStepIndex = 0;
        _this.currentStepEl = null;
        _this.onRemoveNode = function (node) {
            if (_this.triggerEl && (node === _this.triggerEl || node.contains(_this.triggerEl))) {
                _this.hideWindow();
            }
        };
        _this.onAddNodes = function () {
            if (!_this.triggerEl
                && _this.triggerSelector
                && document.querySelector(_this.triggerSelector)) {
                _this.render();
            }
        };
        var tour = {
            tourId: tourData.tourId,
            externalId: '',
            app: tourData.application || '',
            userCustomDataId: tourData.userCustomDataId,
            tourType: tourData.tourType || '',
            triggerSelector: tourData.triggerSelector || '',
            backgroundColor: tourData.backgroundColor,
            urls: tourData.urls || [],
            steps: tourData.steps || [],
        };
        _this.tourId = tour.tourId;
        _this.externalId = tour.externalId;
        _this.app = tour.app;
        _this.userCustomDataId = tour.userCustomDataId;
        _this.triggerSelector = tour.triggerSelector;
        _this.backgroundColor = tour.backgroundColor;
        _this.steps = tour.steps || [];
        _this.urls = tour.urls;
        _this.destroyOtherWindows = destroyOtherWindows;
        _this.render = _this.render.bind(_this);
        _this.setPosition = _this.setPosition.bind(_this);
        _this.checkPostMessage = _this.checkPostMessage.bind(_this);
        window.addEventListener("message", _this.checkPostMessage, false);
        if (_this.triggerSelector) {
            _this.createObserver();
        }
        _this.render();
        return _this;
    }
    PopupTour.prototype.setPosition = function () {
        if (this.containerEl) {
            var position = helpers_1.getPopupPosition(this.containerEl);
            this.containerEl.style.top = position.top;
            this.containerEl.style.left = position.left;
            this.containerEl.style.bottom = position.bottom;
            this.containerEl.style.right = position.right;
            this.containerEl.style.marginTop = position.marginTop;
            this.containerEl.style.marginLeft = position.marginLeft;
        }
    };
    PopupTour.prototype.render = function () {
        var _this = this;
        if (this.triggerSelector) {
            this.triggerEl = document.querySelector(this.triggerSelector);
            if (!this.triggerEl) {
                return;
            }
        }
        if (this.addedToDOM) {
            this.renderStep(this.currentStepIndex);
            return;
        }
        this.containerEl = document.createElement('div');
        this.contentEl = document.createElement('div');
        this.title = document.createElement('h3');
        var header = document.createElement('div');
        this.footerEl = document.createElement('div');
        var tour = document.createElement('div');
        this.containerEl.classList.add(common_scss_1.default.container);
        tour.classList.add(common_scss_1.default.tour);
        header.classList.add(style_scss_1.default.header);
        this.footerEl.classList.add(style_scss_1.default.footer);
        this.title.classList.add(style_scss_1.default.title);
        this.contentEl.classList.add(style_scss_1.default.content);
        header.appendChild(this.title);
        this.containerEl.appendChild(tour);
        tour.appendChild(header);
        tour.appendChild(this.contentEl);
        tour.appendChild(this.footerEl);
        this.buttonsEl = document.createElement('div');
        this.buttonsEl.classList.add(common_scss_1.default.buttons);
        this.stepsEl = document.createElement('div');
        this.stepsEl.classList.add(style_scss_1.default.steps);
        header.appendChild(this.stepsEl);
        this.skipBtn = document.createElement('button');
        this.skipBtn.classList.add(common_scss_1.default.skipBtn);
        this.skipBtn.innerHTML = 'Skip tour';
        this.skipBtn.onclick = function () { return _this.skipTour(); };
        this.nextBtn = document.createElement('button');
        this.nextBtn.innerHTML = 'Next';
        this.nextBtn.onclick = function () { return _this.renderStep(_this.currentStepIndex + 1); };
        this.prevBtn = document.createElement('button');
        this.prevBtn.innerHTML = 'Previous';
        this.prevBtn.classList.add(common_scss_1.default.prevBtn);
        this.prevBtn.onclick = function () { return _this.renderStep(_this.currentStepIndex - 1); };
        this.gotItBtn = document.createElement('button');
        this.gotItBtn.innerHTML = 'Got it';
        this.gotItBtn.onclick = function () { return _this.completeTour(); };
        this.footerEl.appendChild(this.skipBtn);
        this.buttonsEl.appendChild(this.prevBtn);
        this.buttonsEl.appendChild(this.nextBtn);
        this.buttonsEl.appendChild(this.gotItBtn);
        this.footerEl.appendChild(this.buttonsEl);
        if (this.backgroundColor) {
            tour.style.background = this.backgroundColor;
            this.nextBtn.style.color = this.backgroundColor;
            this.gotItBtn.style.color = this.backgroundColor;
        }
        document.body.appendChild(this.containerEl);
        this.renderStep(this.currentStepIndex);
        this.addedToDOM = true;
        this.startTour();
    };
    PopupTour.prototype.renderStep = function (index) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;
        var step = this.steps[index];
        this.currentStepIndex = index;
        if (step.messageBody && this.contentEl) {
            this.contentEl.innerHTML = step.messageBody;
        }
        if (step.messageHeader && this.title) {
            this.title.innerHTML = step.messageHeader;
        }
        if (this.currentStepIndex === this.steps.length - 1) {
            if (this.steps.length > 1) {
                (_a = this.prevBtn) === null || _a === void 0 ? void 0 : _a.classList.remove(style_scss_1.default.hide);
            }
            else {
                (_b = this.prevBtn) === null || _b === void 0 ? void 0 : _b.classList.add(style_scss_1.default.hide);
            }
            (_c = this.skipBtn) === null || _c === void 0 ? void 0 : _c.classList.add(style_scss_1.default.hide);
            (_d = this.nextBtn) === null || _d === void 0 ? void 0 : _d.classList.add(style_scss_1.default.hide);
            (_e = this.gotItBtn) === null || _e === void 0 ? void 0 : _e.classList.remove(style_scss_1.default.hide);
        }
        else if (this.currentStepIndex === 0) {
            (_f = this.skipBtn) === null || _f === void 0 ? void 0 : _f.classList.remove(style_scss_1.default.hide);
            (_g = this.prevBtn) === null || _g === void 0 ? void 0 : _g.classList.add(style_scss_1.default.hide);
            (_h = this.nextBtn) === null || _h === void 0 ? void 0 : _h.classList.remove(style_scss_1.default.hide);
            (_j = this.gotItBtn) === null || _j === void 0 ? void 0 : _j.classList.add(style_scss_1.default.hide);
        }
        else {
            (_k = this.skipBtn) === null || _k === void 0 ? void 0 : _k.classList.remove(style_scss_1.default.hide);
            (_l = this.prevBtn) === null || _l === void 0 ? void 0 : _l.classList.remove(style_scss_1.default.hide);
            (_m = this.nextBtn) === null || _m === void 0 ? void 0 : _m.classList.remove(style_scss_1.default.hide);
            (_o = this.gotItBtn) === null || _o === void 0 ? void 0 : _o.classList.add(style_scss_1.default.hide);
        }
        if (this.steps.length > 1 && this.stepsEl) {
            this.stepsEl.innerHTML = this.currentStepIndex + 1 + " of " + (this.steps && this.steps.length);
            this.stepsEl.classList.remove(style_scss_1.default.hide);
        }
        else {
            (_p = this.stepsEl) === null || _p === void 0 ? void 0 : _p.classList.add(style_scss_1.default.hide);
        }
        this.setPosition();
    };
    PopupTour.prototype.destroy = function () {
        this.hideWindow();
        window.removeEventListener('message', this.checkPostMessage);
        this.deleteObserver();
        this.onDestroy && this.onDestroy();
    };
    PopupTour.prototype.hideWindow = function () {
        if (this.containerEl) {
            document.body.removeChild(this.containerEl);
            this.containerEl = null;
        }
        if (this.triggerEl) {
            this.triggerEl = null;
        }
        this.addedToDOM = false;
    };
    return PopupTour;
}(TooltipBase_1.default));
exports.PopupTour = PopupTour;


/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"header":"_3IxDnnk","footer":"_2FIb490","content":"_2w0uAUK","title":"_1OwiVS6","hide":"_10Sj-iv"};

/***/ }),
/* 41 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(setImmediate) {/* harmony import */ var _finally__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(17);


// Store setTimeout reference so promise-polyfill will be unaffected by
// other code modifying setTimeout (like sinon.useFakeTimers())
var setTimeoutFunc = setTimeout;

function isArray(x) {
  return Boolean(x && typeof x.length !== 'undefined');
}

function noop() {}

// Polyfill for Function.prototype.bind
function bind(fn, thisArg) {
  return function() {
    fn.apply(thisArg, arguments);
  };
}

/**
 * @constructor
 * @param {Function} fn
 */
function Promise(fn) {
  if (!(this instanceof Promise))
    throw new TypeError('Promises must be constructed via new');
  if (typeof fn !== 'function') throw new TypeError('not a function');
  /** @type {!number} */
  this._state = 0;
  /** @type {!boolean} */
  this._handled = false;
  /** @type {Promise|undefined} */
  this._value = undefined;
  /** @type {!Array<!Function>} */
  this._deferreds = [];

  doResolve(fn, this);
}

function handle(self, deferred) {
  while (self._state === 3) {
    self = self._value;
  }
  if (self._state === 0) {
    self._deferreds.push(deferred);
    return;
  }
  self._handled = true;
  Promise._immediateFn(function() {
    var cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;
    if (cb === null) {
      (self._state === 1 ? resolve : reject)(deferred.promise, self._value);
      return;
    }
    var ret;
    try {
      ret = cb(self._value);
    } catch (e) {
      reject(deferred.promise, e);
      return;
    }
    resolve(deferred.promise, ret);
  });
}

function resolve(self, newValue) {
  try {
    // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure
    if (newValue === self)
      throw new TypeError('A promise cannot be resolved with itself.');
    if (
      newValue &&
      (typeof newValue === 'object' || typeof newValue === 'function')
    ) {
      var then = newValue.then;
      if (newValue instanceof Promise) {
        self._state = 3;
        self._value = newValue;
        finale(self);
        return;
      } else if (typeof then === 'function') {
        doResolve(bind(then, newValue), self);
        return;
      }
    }
    self._state = 1;
    self._value = newValue;
    finale(self);
  } catch (e) {
    reject(self, e);
  }
}

function reject(self, newValue) {
  self._state = 2;
  self._value = newValue;
  finale(self);
}

function finale(self) {
  if (self._state === 2 && self._deferreds.length === 0) {
    Promise._immediateFn(function() {
      if (!self._handled) {
        Promise._unhandledRejectionFn(self._value);
      }
    });
  }

  for (var i = 0, len = self._deferreds.length; i < len; i++) {
    handle(self, self._deferreds[i]);
  }
  self._deferreds = null;
}

/**
 * @constructor
 */
function Handler(onFulfilled, onRejected, promise) {
  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;
  this.onRejected = typeof onRejected === 'function' ? onRejected : null;
  this.promise = promise;
}

/**
 * Take a potentially misbehaving resolver function and make sure
 * onFulfilled and onRejected are only called once.
 *
 * Makes no guarantees about asynchrony.
 */
function doResolve(fn, self) {
  var done = false;
  try {
    fn(
      function(value) {
        if (done) return;
        done = true;
        resolve(self, value);
      },
      function(reason) {
        if (done) return;
        done = true;
        reject(self, reason);
      }
    );
  } catch (ex) {
    if (done) return;
    done = true;
    reject(self, ex);
  }
}

Promise.prototype['catch'] = function(onRejected) {
  return this.then(null, onRejected);
};

Promise.prototype.then = function(onFulfilled, onRejected) {
  // @ts-ignore
  var prom = new this.constructor(noop);

  handle(this, new Handler(onFulfilled, onRejected, prom));
  return prom;
};

Promise.prototype['finally'] = _finally__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"];

Promise.all = function(arr) {
  return new Promise(function(resolve, reject) {
    if (!isArray(arr)) {
      return reject(new TypeError('Promise.all accepts an array'));
    }

    var args = Array.prototype.slice.call(arr);
    if (args.length === 0) return resolve([]);
    var remaining = args.length;

    function res(i, val) {
      try {
        if (val && (typeof val === 'object' || typeof val === 'function')) {
          var then = val.then;
          if (typeof then === 'function') {
            then.call(
              val,
              function(val) {
                res(i, val);
              },
              reject
            );
            return;
          }
        }
        args[i] = val;
        if (--remaining === 0) {
          resolve(args);
        }
      } catch (ex) {
        reject(ex);
      }
    }

    for (var i = 0; i < args.length; i++) {
      res(i, args[i]);
    }
  });
};

Promise.resolve = function(value) {
  if (value && typeof value === 'object' && value.constructor === Promise) {
    return value;
  }

  return new Promise(function(resolve) {
    resolve(value);
  });
};

Promise.reject = function(value) {
  return new Promise(function(resolve, reject) {
    reject(value);
  });
};

Promise.race = function(arr) {
  return new Promise(function(resolve, reject) {
    if (!isArray(arr)) {
      return reject(new TypeError('Promise.race accepts an array'));
    }

    for (var i = 0, len = arr.length; i < len; i++) {
      Promise.resolve(arr[i]).then(resolve, reject);
    }
  });
};

// Use polyfill for setImmediate for performance gains
Promise._immediateFn =
  // @ts-ignore
  (typeof setImmediate === 'function' &&
    function(fn) {
      // @ts-ignore
      setImmediate(fn);
    }) ||
  function(fn) {
    setTimeoutFunc(fn, 0);
  };

Promise._unhandledRejectionFn = function _unhandledRejectionFn(err) {
  if (typeof console !== 'undefined' && console) {
    console.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console
  }
};

/* harmony default export */ __webpack_exports__["a"] = (Promise);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(44).setImmediate))

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
__webpack_require__(43);
__webpack_require__(46);
var TooltipTour_1 = __webpack_require__(19);
var PopupTour_1 = __webpack_require__(39);
var FeedbackPopup_1 = __webpack_require__(47);
var api_1 = __webpack_require__(4);
var models_1 = __webpack_require__(16);
var publicApi_1 = __webpack_require__(49);
var helpers_1 = __webpack_require__(1);
var api_2 = __webpack_require__(4);
var constants_1 = __webpack_require__(2);
// import testData from './testData';
var toursData = [];
var feedbacksData = [];
var waitingToDisplay = [];
var activeWindow = null;
var isAddedToDOM = false;
var destroyAllWindows = function () {
    for (var _i = 0, waitingToDisplay_1 = waitingToDisplay; _i < waitingToDisplay_1.length; _i++) {
        var window_1 = waitingToDisplay_1[_i];
        window_1.destroy();
    }
    waitingToDisplay = [];
};
var destroyOtherWindows = function (window) {
    for (var _i = 0, waitingToDisplay_2 = waitingToDisplay; _i < waitingToDisplay_2.length; _i++) {
        var item = waitingToDisplay_2[_i];
        if (item.addedToDOM) {
            isAddedToDOM = true;
        }
        if (item !== window) {
            item.destroy();
        }
    }
    toursData = [];
    activeWindow = window;
    window.onDestroy = function () {
        activeWindow = null;
        waitingToDisplay = [];
    };
};
var addToWaitingToDisplay = function (data) {
    if (waitingToDisplay.some(function (window) { return window.addedToDOM; })) {
        return;
    }
    if (data.tour) {
        if (data.tour.tourType === models_1.TourTypes.SmartTooltip) {
            waitingToDisplay.push(new TooltipTour_1.TooltipTour(data.tour, destroyOtherWindows));
        }
        if (data.tour.tourType === models_1.TourTypes.PopUp) {
            waitingToDisplay.push(new PopupTour_1.PopupTour(data.tour, destroyOtherWindows));
        }
    }
    if (data.feedback) {
        waitingToDisplay.push(new FeedbackPopup_1.FeedbackPopup(data.feedback, destroyOtherWindows));
    }
};
var createTours = function (systemName) {
    if (helpers_1.isMobile()) {
        return;
    }
    if (helpers_1.getSmartTooltipEnabled()) {
        // Promise.resolve(testData.tourResponse)
        api_1.api.smartTooltipApi.getTour({
            systemName: systemName,
            userAttributes: window.productTours.userAttributes || null,
        })
            .then(function (smartTooltipResponse) {
            if (!smartTooltipResponse.tours) {
                return;
            }
            var currentURL = helpers_1.getCurrentUrlFromLocation();
            toursData = smartTooltipResponse.tours;
            for (var _i = 0, toursData_1 = toursData; _i < toursData_1.length; _i++) {
                var tourData = toursData_1[_i];
                if (tourData.steps.length && helpers_1.urlIsMatchedAnyMask(currentURL, tourData.urls)) {
                    addToWaitingToDisplay({ tour: tourData });
                }
                if (activeWindow) {
                    break;
                }
            }
        });
    }
    if (helpers_1.getUserFeedbackEnabled()) {
        // Promise.resolve(testData.feedbackResponse)
        api_1.api.userFeedbackApi.getFeedbacks(systemName)
            .then(function (feedbackResponse) {
            if (!feedbackResponse.feedbacks) {
                return;
            }
            var currentURL = helpers_1.getCurrentUrlFromLocation();
            feedbacksData = feedbackResponse.feedbacks;
            for (var _i = 0, feedbacksData_1 = feedbacksData; _i < feedbacksData_1.length; _i++) {
                var feedbackData = feedbacksData_1[_i];
                if (helpers_1.urlIsMatchedAnyMask(currentURL, feedbackData.urls)) {
                    addToWaitingToDisplay({ feedback: feedbackData });
                }
                if (activeWindow) {
                    break;
                }
            }
        });
    }
};
var checkHygiene = function (event) {
    var data = event.data;
    if (data && data.action === constants_1.PostMessageActions.UserInHygiene) {
        destroyAllWindows();
        window.removeEventListener('message', checkHygiene);
    }
};
window.addEventListener("message", checkHygiene, false);
var onChangeURL = function (URL) {
    if (activeWindow) {
        if (helpers_1.urlIsMatchedAnyMask(URL, activeWindow.urls)) {
            activeWindow.setUrlMatches(true);
            !isAddedToDOM && activeWindow.render();
        }
        else {
            activeWindow.setUrlMatches(false);
            activeWindow instanceof TooltipTour_1.TooltipTour && activeWindow.closeCurrentStep();
            activeWindow instanceof PopupTour_1.PopupTour && activeWindow.hideWindow();
            activeWindow instanceof FeedbackPopup_1.FeedbackPopup && activeWindow.hideWindow();
        }
    }
    else {
        var manageWaiters = function (data, waiter) {
            if (isAddedToDOM) {
                return;
            }
            if (helpers_1.urlIsMatchedAnyMask(URL, data.urls)) {
                if (!waiter) {
                    addToWaitingToDisplay(data);
                }
            }
            else {
                if (waiter) {
                    waiter.destroy();
                    waitingToDisplay = waitingToDisplay.filter(function (window) { return window !== waiter; });
                }
            }
        };
        var _loop_1 = function (tourData) {
            var waitingWindow = waitingToDisplay.find(function (window) { return 'tourId' in window && window.tourId === tourData.tourId; });
            manageWaiters({ tour: tourData }, waitingWindow);
        };
        for (var _i = 0, toursData_2 = toursData; _i < toursData_2.length; _i++) {
            var tourData = toursData_2[_i];
            _loop_1(tourData);
        }
        var _loop_2 = function (feedbackData) {
            var waitingWindow = waitingToDisplay.find(function (window) { return 'feedbackId' in window && window.feedbackId === feedbackData.feedbackId; });
            manageWaiters({ feedback: feedbackData }, waitingWindow);
        };
        for (var _a = 0, feedbacksData_2 = feedbacksData; _a < feedbacksData_2.length; _a++) {
            var feedbackData = feedbacksData_2[_a];
            _loop_2(feedbackData);
        }
    }
};
var realPushState = history.pushState;
// this is not an arrow function because of the arguments array
history.pushState = function (params, title, URL) {
    onChangeURL(URL);
    // @ts-ignore
    return realPushState.apply(history, arguments);
};
var realReplaceState = history.replaceState;
// this is not an arrow function because of the arguments array
history.replaceState = function (params, title, URL) {
    onChangeURL(URL);
    // @ts-ignore
    return realReplaceState.apply(history, arguments);
};
window.onpopstate = function () {
    onChangeURL(helpers_1.getCurrentUrlFromLocation());
};
api_2.setBaseUrl(helpers_1.getBaseUrl());
publicApi_1.createPublicApi();
createTours(helpers_1.getAppId());


/***/ }),
/* 43 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(global) {/* harmony import */ var _index__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(41);
/* harmony import */ var _finally__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(17);



/** @suppress {undefinedVars} */
var globalNS = (function() {
  // the only reliable means to get the global object is
  // `Function('return this')()`
  // However, this causes CSP violations in Chrome apps.
  if (typeof self !== 'undefined') {
    return self;
  }
  if (typeof window !== 'undefined') {
    return window;
  }
  if (typeof global !== 'undefined') {
    return global;
  }
  throw new Error('unable to locate global object');
})();

if (!('Promise' in globalNS)) {
  globalNS['Promise'] = _index__WEBPACK_IMPORTED_MODULE_0__[/* default */ "a"];
} else if (!globalNS.Promise.prototype['finally']) {
  globalNS.Promise.prototype['finally'] = _finally__WEBPACK_IMPORTED_MODULE_1__[/* default */ "a"];
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(18)))

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(45);
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(18)))

/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(18), __webpack_require__(14)))

/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

// .matches polyfill
(function (e) {
    var matches = e.matches || e.matchesSelector || e.webkitMatchesSelector || e.mozMatchesSelector || e.msMatchesSelector || e.oMatchesSelector;
    if (!matches) {
        (e.matches = e.matchesSelector = function matches(selector) {
            var matches = document.querySelectorAll(selector);
            var th = this; // eslint-disable-line
            return Array.prototype.some.call(matches, function (e) {
                return e === th;
            });
        });
    }
    else {
        (e.matches = e.matchesSelector = matches);
    }
})(Element.prototype);
// MouseEvent polyfill
(function (window) {
    try {
        new MouseEvent('test');
        return false; // No need to polyfill
    }
    catch (e) {
        // Need to polyfill - fall through
    }
    // Polyfills DOM4 MouseEvent
    var MouseEventPolyfill = function (eventType, params) {
        params = params || { bubbles: false, cancelable: false };
        var mouseEvent = document.createEvent('MouseEvent');
        mouseEvent.initMouseEvent(eventType, params.bubbles, params.cancelable, window, 0, params.screenX || 0, params.screenY || 0, params.clientX || 0, params.clientY || 0, params.ctrlKey || false, params.altKey || false, params.shiftKey || false, params.metaKey || false, params.button || 0, params.relatedTarget || null);
        return mouseEvent;
    };
    MouseEventPolyfill.prototype = Event.prototype;
    window.MouseEvent = MouseEventPolyfill;
})(window);


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FeedbackPopup = void 0;
var common_scss_1 = __importDefault(__webpack_require__(3));
var style_scss_1 = __importDefault(__webpack_require__(48));
var models_1 = __webpack_require__(16);
var MainWindow_1 = __importDefault(__webpack_require__(15));
var api_1 = __webpack_require__(4);
var helpers_1 = __webpack_require__(1);
var FeedbackPopup = /** @class */ (function (_super) {
    __extends(FeedbackPopup, _super);
    function FeedbackPopup(feedbackData, destroyOtherWindows) {
        var _this = _super.call(this) || this;
        _this.rootQuestionId = null;
        _this.currentQuestionIndex = -1;
        _this.externalId = '';
        _this.questions = [];
        _this.userCustomDataId = null;
        _this.containerEl = null;
        _this.questionEl = null;
        _this.answerOptionsEl = null;
        _this.commentEl = null;
        _this.triggerEl = null;
        _this.triggerSelector = null;
        _this.backgroundColor = null;
        _this.urlMatches = true;
        _this.passed = false;
        _this.selectedAnswers = {};
        _this.isDestroyable = true;
        _this.isDestroyed = false;
        _this.autoClosingTimer = 0;
        _this.onRemoveNode = function (node) {
            if (_this.triggerEl && (node === _this.triggerEl || node.contains(_this.triggerEl))) {
                _this.hideWindow();
            }
        };
        _this.onAddNodes = function () {
            if (!_this.triggerEl
                && _this.triggerSelector
                && document.querySelector(_this.triggerSelector)) {
                _this.render();
            }
        };
        _this.setAnswer = function (question, answer) {
            _this.isDestroyable = false;
            var selectedAnswer = _this.selectedAnswers[question.questionId];
            if (!selectedAnswer) {
                selectedAnswer = {
                    rateCount: null,
                };
                _this.selectedAnswers[question.questionId] = selectedAnswer;
            }
            selectedAnswer.rateCount = answer;
            if (question.viewCommentSection) {
                return;
            }
            _this.sendAnswer(question);
        };
        _this.sendAnswer = function (question) {
            var comment = null;
            if (question.viewCommentSection && _this.commentEl) {
                comment = _this.commentEl.value;
            }
            var selectedRate = _this.selectedAnswers[question.questionId].rateCount;
            api_1.api.userFeedbackApi.setAnswer({
                feedbackId: _this.feedbackId,
                questionId: question.questionId,
                rate: selectedRate,
                checkedListData: null,
                dichotomousAnswer: null,
                comment: comment,
            });
            _this.showNextQuestion();
        };
        _this.changeStarColor = function (number) {
            var _a, _b, _c, _d;
            var stars = (_a = _this.containerEl) === null || _a === void 0 ? void 0 : _a.querySelectorAll("." + style_scss_1.default.stars + " > div");
            // reset to selected answer
            if (number < 0) {
                var question = _this.questions[_this.currentQuestionIndex];
                var answer = (_b = _this.selectedAnswers[question.questionId]) === null || _b === void 0 ? void 0 : _b.rateCount;
                if (answer) {
                    number = answer;
                }
            }
            var i = 1;
            for (var key in stars) {
                if (number >= i) {
                    (_c = stars[key].classList) === null || _c === void 0 ? void 0 : _c.add(style_scss_1.default.filled);
                }
                else {
                    (_d = stars[key].classList) === null || _d === void 0 ? void 0 : _d.remove(style_scss_1.default.filled);
                }
                i += 1;
            }
        };
        _this.sumbitClick = function () {
            var question = _this.questions[_this.currentQuestionIndex];
            if (!question) {
                return;
            }
            var answer = _this.selectedAnswers[question.questionId];
            if (!answer) {
                return;
            }
            _this.sendAnswer(question);
        };
        _this.renderQuestion = function (question) {
            if (!_this.containerEl) {
                return;
            }
            _this.containerEl.innerHTML = "\n          <div class=\"" + style_scss_1.default.feedback + "\">  \n            <div class=\"" + style_scss_1.default.question + "\"></div>\n            <div class=\"" + style_scss_1.default.answer + "\"></div>\n            " + (question.viewCommentSection
                ? "\n                <textarea class=\"" + style_scss_1.default.comment + "\" placeholder=\"Comment\" maxlength=\"500\"></textarea>\n                <button class=\"" + style_scss_1.default.submit + "\" onclick=" + _this.sumbitClick + ">Submit</button>\n                "
                : null) + "\n            <div class=\"" + style_scss_1.default.powered + "\">\n              Powered by \n              <a href=\"https://kb.epam.com/display/EPMHIVE/HIVE+widgets\" target=\"_blank\">Global Ask</a>\n            </div>\n            <div class=\"" + style_scss_1.default.closeBtn + "\">\n              <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M6.63606 6.63604C6.24553 7.02656 6.24553 7.65973 6.63606 8.05025L11.5858 13L6.63606 17.9497C6.24553 18.3403 6.24553 18.9734 6.63606 19.364C7.02658 19.7545 7.65975 19.7545 8.05027 19.364L13 14.4142L17.9498 19.364C18.3403 19.7545 18.9735 19.7545 19.364 19.364C19.7545 18.9734 19.7545 18.3403 19.364 17.9497L14.4142 13L19.364 8.05025C19.7545 7.65973 19.7545 7.02656 19.364 6.63604C18.9735 6.24551 18.3403 6.24552 17.9498 6.63604L13 11.5858L8.05027 6.63604C7.65974 6.24551 7.02658 6.24551 6.63606 6.63604Z\" fill=\"#2C2C2C\"/>\n              </svg>\n            </div>\n          </div>\n        ";
            _this.questionEl = _this.containerEl.querySelector("." + style_scss_1.default.question);
            _this.answerOptionsEl = _this.containerEl.querySelector("." + style_scss_1.default.answer);
            _this.commentEl = _this.containerEl.querySelector("." + style_scss_1.default.comment);
            _this.insertDataIntoDOM(question);
            var closeBtn = _this.containerEl.querySelector("." + style_scss_1.default.closeBtn);
            closeBtn.onclick = function () {
                _this.isDestroyable = true;
                _this.hideWindow();
                if (!_this.passed) {
                    api_1.api.userFeedbackApi.skipFeedback(_this.feedbackId, _this.externalId);
                }
            };
            var submitBtn = _this.containerEl.querySelector("." + style_scss_1.default.submit);
            if (submitBtn) {
                submitBtn.onclick = _this.sumbitClick;
            }
        };
        _this.defineFirstQuestionIndex = function () {
            var _a;
            _this.currentQuestionIndex = (_a = _this.questions) === null || _a === void 0 ? void 0 : _a.findIndex(function (q) { return q.questionId === _this.rootQuestionId; });
        };
        _this.defineNextQuestionIndex = function () {
            var _a, _b, _c;
            var question = _this.questions[_this.currentQuestionIndex];
            var selectedRating = _this.selectedAnswers[question.questionId];
            var nextQuestionId = (_b = (_a = question.nextQuestions) === null || _a === void 0 ? void 0 : _a.find(function (x) { var _a, _b; return ((_b = (_a = x.selectedRate) === null || _a === void 0 ? void 0 : _a.findIndex(function (s) { return s === selectedRating.rateCount; })) !== null && _b !== void 0 ? _b : 0) >= 0; })) === null || _b === void 0 ? void 0 : _b.nextQuestionId;
            if (nextQuestionId) {
                _this.currentQuestionIndex = (_c = _this.questions) === null || _c === void 0 ? void 0 : _c.findIndex(function (q) { return q.questionId === nextQuestionId; });
            }
            else {
                _this.currentQuestionIndex = -1;
            }
        };
        _this.autoCloseWithDelay = function (delayInSeconds) {
            _this.autoClosingTimer = window.setTimeout(function () {
                _this.isDestroyable = true;
                _this.destroy();
            }, delayInSeconds * 1000);
        };
        _this.hideWindow = function () {
            if (_this.containerEl) {
                document.body.removeChild(_this.containerEl);
                _this.containerEl = null;
            }
            if (_this.triggerEl) {
                _this.triggerEl = null;
            }
            _this.addedToDOM = false;
        };
        _this.feedbackId = feedbackData.feedbackId;
        _this.rootQuestionId = feedbackData.rootQuestionId;
        _this.userCustomDataId = feedbackData.userCustomDataId;
        _this.triggerSelector = feedbackData.triggerSelector;
        _this.urls = feedbackData.urls || [];
        _this.destroyOtherWindows = destroyOtherWindows;
        _this.render = _this.render.bind(_this);
        _this.setPosition = _this.setPosition.bind(_this);
        if (_this.triggerSelector) {
            _this.createObserver();
        }
        _this.render();
        return _this;
    }
    FeedbackPopup.prototype.setPosition = function () {
        if (this.containerEl) {
            var position = helpers_1.getPopupPosition(this.containerEl);
            this.containerEl.style.top = position.top;
            this.containerEl.style.left = position.left;
            this.containerEl.style.bottom = position.bottom;
            this.containerEl.style.right = position.right;
            this.containerEl.style.marginTop = position.marginTop;
            this.containerEl.style.marginLeft = position.marginLeft;
        }
    };
    FeedbackPopup.prototype.getStarIcon = function () {
        return ("<svg width=\"36\" height=\"35\" viewBox=\"0 0 36 35\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path d=\"M17.0767 1.21993C17.4183 0.398636 18.5817 0.398636 18.9233 1.21993L23.0555 11.1549C23.1995 11.5011 23.5251 11.7377 23.8989 11.7677L34.6245 12.6275C35.5112 12.6986 35.8707 13.8051 35.1952 14.3838L27.0234 21.3838C26.7386 21.6277 26.6142 22.0105 26.7012 22.3753L29.1978 32.8417C29.4042 33.7069 28.463 34.3908 27.7039 33.9271L18.5213 28.3184C18.2012 28.1229 17.7988 28.1229 17.4787 28.3184L8.29612 33.9271C7.53702 34.3908 6.59577 33.7069 6.80215 32.8417L9.29877 22.3753C9.38578 22.0105 9.26141 21.6277 8.97662 21.3838L0.804826 14.3838C0.129289 13.8051 0.488815 12.6986 1.37547 12.6275L12.1011 11.7677C12.4749 11.7377 12.8005 11.5011 12.9445 11.1549L17.0767 1.21993Z\" />\n        </svg>\n        ");
    };
    FeedbackPopup.prototype.getAnswerOptions = function (question) {
        var _this = this;
        if (question.questionTypes === models_1.QuestionTypes.Stars) {
            var rating = [1, 2, 3, 4, 5];
            var starsEl_1 = document.createElement('div');
            starsEl_1.classList.add(style_scss_1.default.stars);
            rating.forEach(function (number) {
                var star = document.createElement('div');
                star.innerHTML = _this.getStarIcon();
                star.onclick = function () { return _this.setAnswer(_this.questions[_this.currentQuestionIndex], number); };
                star.onmouseover = function () { return _this.changeStarColor(number); };
                star.onmouseout = function () { return _this.changeStarColor(-1); };
                starsEl_1.appendChild(star);
            });
            return starsEl_1;
        }
        if (question.questionTypes === models_1.QuestionTypes.FinalMessage) {
            return null;
        }
        return null;
    };
    FeedbackPopup.prototype.render = function () {
        var _this = this;
        if (this.isDestroyed) {
            return;
        }
        if (this.triggerSelector) {
            this.triggerEl = document.querySelector(this.triggerSelector);
            if (!this.triggerEl) {
                return;
            }
        }
        var createFeedback = function () {
            if (_this.isDestroyed) {
                return;
            }
            if (_this.containerEl) {
                document.body.removeChild(_this.containerEl);
            }
            var question = _this.questions[_this.currentQuestionIndex];
            if (!question) {
                return;
            }
            _this.containerEl = document.createElement('div');
            _this.containerEl.classList.add(common_scss_1.default.container);
            _this.containerEl.classList.add(style_scss_1.default.feedbackContainer);
            _this.renderQuestion(question);
            document.body.appendChild(_this.containerEl);
            _this.addedToDOM = true;
            _this.startFeedback();
            _this.setPosition();
        };
        if (this.questions.length) {
            createFeedback();
        }
        else {
            this.destroyOtherWindows(this);
            if (this.isDestroyed) {
                return;
            }
            // Promise.resolve(testData.questions)
            api_1.api.userFeedbackApi
                .getQuestions(this.feedbackId, { userCustomdataId: this.userCustomDataId })
                .then(function (questions) {
                if (questions && questions.length) {
                    _this.questions = questions;
                    _this.defineFirstQuestionIndex();
                    createFeedback();
                }
            });
        }
    };
    FeedbackPopup.prototype.showNextQuestion = function () {
        this.defineNextQuestionIndex();
        if (this.currentQuestionIndex < 0) {
            this.destroy();
            return;
        }
        var question = this.questions[this.currentQuestionIndex];
        this.renderQuestion(question);
        if (question.questionTypes === models_1.QuestionTypes.FinalMessage) {
            api_1.api.userFeedbackApi.passFeedback(this.feedbackId, this.externalId);
            this.passed = true;
            this.autoCloseWithDelay(5);
        }
    };
    FeedbackPopup.prototype.insertDataIntoDOM = function (question) {
        var _a;
        if (this.questionEl && this.answerOptionsEl) {
            this.questionEl.innerHTML = question.content;
            this.answerOptionsEl.innerHTML = '';
            var newAnswerOptions = this.getAnswerOptions(question);
            if (newAnswerOptions) {
                this.answerOptionsEl.appendChild(newAnswerOptions);
            }
            this.setPosition();
        }
        if (this.commentEl && question.questionTypes === models_1.QuestionTypes.FinalMessage) {
            (_a = this.commentEl.parentElement) === null || _a === void 0 ? void 0 : _a.removeChild(this.commentEl);
            this.commentEl = null;
        }
    };
    FeedbackPopup.prototype.startFeedback = function () {
        var _this = this;
        this.destroyOtherWindows(this);
        api_1.api.userFeedbackApi
            .startFeedback({
            feedbackId: this.feedbackId,
            userCustomdataId: this.userCustomDataId,
        })
            .then(function (externalId) {
            _this.externalId = externalId;
        });
    };
    FeedbackPopup.prototype.destroy = function () {
        if (!this.isDestroyable) {
            return;
        }
        if (this.autoClosingTimer > 0) {
            clearTimeout(this.autoClosingTimer);
            this.autoClosingTimer = 0;
        }
        this.isDestroyed = true;
        this.hideWindow();
        this.deleteObserver();
        this.onDestroy && this.onDestroy();
    };
    return FeedbackPopup;
}(MainWindow_1.default));
exports.FeedbackPopup = FeedbackPopup;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

// extracted by mini-css-extract-plugin
module.exports = {"feedbackContainer":"_3cArPgw","feedback":"_2I8vHb0","question":"_1jYZ0m6","powered":"_3k3PqdD","stars":"_37gt8EM","filled":"_32jPSns","closeBtn":"_2ppAPtx","comment":"_2khYMU8","submit":"_2fb6V3s"};

/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
__exportStar(__webpack_require__(50), exports);


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
exports.PublicApiImpl = exports.createPublicApi = void 0;
function createPublicApi() {
    var apiImpl = new PublicApiImpl();
    var contract = {
        userAttributes: apiImpl.userAttributes,
    };
    var w = window;
    w.productTours = w.productTours || {};
    w.productTours.api = contract;
    return apiImpl;
}
exports.createPublicApi = createPublicApi;
var PublicApiImpl = /** @class */ (function () {
    function PublicApiImpl() {
    }
    return PublicApiImpl;
}());
exports.PublicApiImpl = PublicApiImpl;


/***/ })
/******/ ]);
            (function() {
              var styles = document.createElement('style');
              styles.innerHTML="@font-face{font-family:\"Sans Regular\";src:url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/woff2/ttf/SourceSansPro-Regular.ttf.woff2\") format(\"woff2\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/woff/otf/SourceSansPro-Regular.otf.woff\") format(\"woff\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/otf/SourceSansPro-Regular.otf\") format(\"opentype\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/ttf/SourceSansPro-Regular.ttf\") format(\"truetype\");font-weight:normal;font-style:normal}@font-face{font-family:\"Sans Semibold\";src:url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/woff2/ttf/SourceSansPro-Semibold.ttf.woff2\") format(\"woff2\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/woff/otf/SourceSansPro-SemiBold.otf.woff\") format(\"woff\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/otf/SourceSansPro-Semibold.otf\") format(\"opentype\"),url(\"https://static.cdn.epam.com/uploads/690afa39a93c88c4dd13758fe1d869d5/EPM-UUI/fonts/source-sans-pro/ttf/SourceSansPro-Semibold.ttf\") format(\"truetype\");font-weight:normal;font-style:normal}._14CGvml{position:fixed;z-index:999999;width:320px;top:-9999px;left:-9999px;padding:5px;color:#fff;outline:none}._14CGvml *{margin:0;padding:0;font-family:\"Sans Regular\";font-size:12px;font-weight:normal;line-height:16px;background:none;color:#fff;-webkit-box-sizing:border-box;box-sizing:border-box;text-decoration:none;word-wrap:break-word;border:none;outline:none}._14CGvml a{text-decoration:underline}._14CGvml a:hover{text-decoration:none;color:inherit !important}._14CGvml b,._14CGvml strong{font-family:\"Sans Semibold\"}._14CGvml ol{margin-left:12px}._14CGvml ul{margin-left:16px}.MBhU5L_{background-image:linear-gradient(45deg, #3f85ba 0%, #5478da 100%);border-radius:3px;-webkit-box-shadow: 0 1px 3px 0 rgba(44,47,60,.11),0 2px 18px 0 rgba(44,47,60,.08);box-shadow: 0 1px 3px 0 rgba(44,47,60,.11),0 2px 18px 0 rgba(44,47,60,.08);max-height:100%;overflow:auto}@-webkit-keyframes _2wJznjZ{0%{-webkit-transform:translate(-50%, -50%) rotate(0deg);transform:translate(-50%, -50%) rotate(0deg)}100%{-webkit-transform:translate(-50%, -50%) rotate(360deg);transform:translate(-50%, -50%) rotate(360deg)}}@keyframes _2wJznjZ{0%{-webkit-transform:translate(-50%, -50%) rotate(0deg);transform:translate(-50%, -50%) rotate(0deg)}100%{-webkit-transform:translate(-50%, -50%) rotate(360deg);transform:translate(-50%, -50%) rotate(360deg)}}.wm0fZeO{width:50px;height:50px;display:inline-block;overflow:hidden}._3sxRnWE{width:100%;height:100%;position:relative;-webkit-transform:translateZ(0) scale(1);transform:translateZ(0) scale(1);-webkit-backface-visibility:hidden;backface-visibility:hidden;-webkit-transform-origin:0 0;transform-origin:0 0}._3sxRnWE div{position:absolute;width:50%;height:50%;border:8px solid #fff;border-top-color:transparent;border-radius:50%;-webkit-box-sizing:content-box;box-sizing:content-box;-webkit-animation:_2wJznjZ 1s linear infinite;animation:_2wJznjZ 1s linear infinite;top:50%;left:50%}._1iPr6OU{font-family:\"Sans Semibold\";margin-right:16px;padding:0 !important;height:auto !important;cursor:pointer;-ms-flex-negative:0;flex-shrink:0}._1g9kfrV{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end;-webkit-box-flex:1;-ms-flex-positive:1;flex-grow:1}._1g9kfrV button{color:#5478da;background:#fff;border:1px solid #fff;border-radius:2px;padding:4px 12px;cursor:pointer;font-family:\"Sans Semibold\";height:auto !important;margin-left:8px}._1g9kfrV button:first-child{margin-left:0}._1g9kfrV ._1Lhu0An{color:#fff;background:none}._39mQHhW,._2JIclUd{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}._39mQHhW{-webkit-box-align:baseline;-ms-flex-align:baseline;align-items:baseline;padding:16px 16px 8px 16px}._2JIclUd{margin-top:12px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 16px 16px 16px}.L61b-QV{padding:0 16px}.L61b-QV img{display:block;max-width:100%;max-height:170px;margin:0 auto}._14bylN6{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;height:120px}._2fBJwaE{position:relative;z-index:1;max-width:100%;max-height:170px;margin:0 auto;padding:9px 3px 0;display:block}._2So70E8{width:100%;font-family:\"Sans Semibold\";font-size:14px;line-height:18px;padding-right:10px;word-break:break-word}._2rLvA-3{margin-left:auto;opacity:.5;-ms-flex-negative:0;flex-shrink:0}.-_Rf87e{position:absolute;display:block;line-height:0;overflow:hidden}._3A8moD6,._1eKTE72{top:-7px;left:4px;-webkit-transform:scale(-1, 1);transform:scale(-1, 1);fill:#4581c3}._2soPkqI,.NWqmuTb{top:-7px;right:4px;fill:#5478da}._8trvWiJ,._2l4jwoF{bottom:-7px;left:4px;-webkit-transform:scale(-1, -1);transform:scale(-1, -1);fill:#3f85ba}._152nKIe,._3hEzpCN{bottom:-7px;right:4px;-webkit-transform:scale(1, -1);transform:scale(1, -1);fill:#4e7cd2}._1jttyub{top:6px;left:-9px;-webkit-transform:rotate(270deg);transform:rotate(270deg);fill:#4581c3}.G2HecDE{bottom:6px;left:-9px;-webkit-transform:scale(1, -1) rotate(270deg);transform:scale(1, -1) rotate(270deg);fill:#3f85ba}._3-Q7XgB{top:6px;right:-9px;-webkit-transform:scale(-1, 1) rotate(270deg);transform:scale(-1, 1) rotate(270deg);fill:#5478da}._2Xw5P94{bottom:6px;right:-9px;-webkit-transform:rotate(90deg);transform:rotate(90deg);fill:#4e7cd2}._2FUvEo6{width:32px;height:16px;top:-8px;right:50%;margin-right:-16px;fill:#5478da}._2hbJ9dH{width:32px;height:16px;bottom:-8px;right:50%;margin-right:-16px;fill:#3f85ba}._2hbJ9dH svg{margin-top:-16px}._20zpIz6{width:16px;height:32px;top:50%;left:-8px;margin-top:-16px;fill:#3f85ba}.i98L4CH{width:16px;height:32px;top:50%;right:-8px;margin-top:-16px;fill:#5478da}.i98L4CH svg{margin-left:-16px}._9OlIjJR{display:none}._3IxDnnk,._2FIb490{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}._3IxDnnk{padding:16px 16px 8px 16px}._2w0uAUK{padding:0 16px}._2w0uAUK img{display:block;max-width:100%;max-height:170px;margin:0 auto}._2FIb490{padding:12px 16px 16px 16px}._1OwiVS6{font-family:\"Sans Semibold\";font-size:14px;line-height:18px;padding-right:16px;word-break:break-word}._10Sj-iv{display:none}._3cArPgw{width:360px}._3cArPgw ._2I8vHb0{position:relative;background:#fff;-webkit-box-shadow:0px 1px 3px rgba(44,47,60,.11),0px 2px 18px rgba(44,47,60,.08);box-shadow:0px 1px 3px rgba(44,47,60,.11),0px 2px 18px rgba(44,47,60,.08);border-radius:6px;padding:32px}._3cArPgw ._2I8vHb0 *{color:#222}._3cArPgw ._2I8vHb0 ._1jYZ0m6{font-family:\"Sans Semibold\";font-size:16px;line-height:24px;text-align:center;margin-bottom:8px;word-break:break-word}._3cArPgw ._2I8vHb0 ._3k3PqdD{position:absolute;bottom:4px;left:0;right:0;text-align:center;line-height:24px;color:#000}._3cArPgw ._2I8vHb0 ._3k3PqdD a{font-family:\"Sans Semibold\";color:#199ad2;text-decoration:none}._3cArPgw ._2I8vHb0 ._3k3PqdD a:hover{color:#199ad2 !important}._3cArPgw ._2I8vHb0 ._37gt8EM{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;background:#f8f9fa;border:1px solid #eee;border-radius:4px;padding:24px 16px}._3cArPgw ._2I8vHb0 ._37gt8EM>div{cursor:pointer}._3cArPgw ._2I8vHb0 ._37gt8EM>div svg{fill:#d1d1d1}._3cArPgw ._2I8vHb0 ._37gt8EM>div._32jPSns svg{fill:#fdc935}._3cArPgw ._2I8vHb0 ._2ppAPtx{position:absolute;top:8px;right:8px;cursor:pointer;line-height:0;font-size:0}._3cArPgw ._2khYMU8{border-radius:4px;border:1px solid #ced0db;-webkit-box-sizing:border-box;box-sizing:border-box;border-width:1px;border-style:solid;color:#222;font-size:14px;height:66px;width:100%;padding:6px 12px;margin:18px 0;resize:none}._3cArPgw ._2khYMU8::-webkit-input-placeholder{color:#acafbf}._3cArPgw ._2khYMU8::-moz-placeholder{color:#acafbf}._3cArPgw ._2khYMU8:-ms-input-placeholder{color:#acafbf}._3cArPgw ._2khYMU8::-ms-input-placeholder{color:#acafbf}._3cArPgw ._2khYMU8::placeholder{color:#acafbf}._3cArPgw ._2fb6V3s{width:100%;height:36px;background:#008ace;color:#fff;font-size:14px;font-family:\"Sans Semibold\";cursor:pointer}"; 
              document.head.appendChild(styles);
            })();
          
            function getSmartTooltipManualCreator() {
              var script = document.createElement('script');

              var url = '';

              if (
                EpamServices &&
                EpamServices._internal
                && EpamServices._internal.smartTooltipSettings
                && EpamServices._internal.smartTooltipSettings.baseUrl
              ) {
                url = EpamServices._internal.smartTooltipSettings.baseUrl;
              }

              script.type ="text/javascript"; 
              script.charset ="utf-8"; 
              script.src = url + "/built/bundle_manual_smart_tooltips_creator.js"; 
              document.head.appendChild(script);
            }
          
