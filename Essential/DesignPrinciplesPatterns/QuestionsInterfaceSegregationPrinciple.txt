1) Клиент не должен вынужденно зависеть от методов, которыми не пользуется.
2) Принцип ISP предназначен для получения простого и слабосвязанного кода.
3) Для получения простого в сопровождении кода каждый класс должен знать минимум информации об окружающем коде, 
   необходимой для решения своей задачи.
4) Чем ниже вероятность изменения интерфейса зависимости или его поведения, тем меньше вероятность поломки вашего кода.
5) Чем проще аргументы метода, тем проще удовлетворять предусловиям метода.
6) На практике это выражается в использовании наиболее простых типов, а также базовых типов в качестве входных аргументов.
7) Следование принципу единственной обязанности приводит к связным класса, что позволяет с меньшими усилиями их понимать и развивать.
8) Следование принципу разделения интерфейсов уменьшает связанность между классами и их клиентами, 
   ведь теперь клиенты используют более простые зависимости, чем раньше.