Анти-паттерн в написании кода:
  1) Copy Paste:
     private static string ToBin(int decimalNumber)
        {
            string binString = string.Empty;
            char[] charArray;

            while (decimalNumber > 0)
            {
                binString += (decimalNumber % 2).ToString();
                decimalNumber /= 2;
            }

            charArray = binString.ToCharArray();

            Array.Reverse(charArray);

            return new string(charArray); 
       private static string ToOct(int decimalNumber)
        {
            string octString = string.Empty;
            char[] charArray;

            while (decimalNumber > 0)
            {
                octString += (decimalNumber % 8).ToString();
                decimalNumber /= 8;
            }

            charArray = octString.ToCharArray();

            Array.Reverse(charArray);

            return new string(charArray);
        }
  
  2) Spaghetti Code:
	private static string ToBase64(int decimalNumber)
        {
            string dictionary = "ABCDEFGHIJKLMNOPQRSTUVWXYZ" + "ABCDEFGHIJKLMNOPQRSTUVWXYZ".ToLower() + "0123456789" + "+/";

            string[] arrayBits = BytesToBits(BitConverter.GetBytes(decimalNumber));

            string binNumber = string.Empty;
            string base64String = string.Empty;

            foreach (string s in arrayBits)
            {
                binNumber += s;
            }

            binNumber += "0000000000000000";

            for (int i = 0; i < binNumber.Length / 8; i++)
            {
                base64String += dictionary[BinToDec(binNumber.Substring(i * 6, 6))];
            }

            return base64String + "==";
        }

  3) Hard Code:
    public static void ProcessFile()
        {
            Console.WriteLine("Обработка информации из файлов.");

            string coords = string.Empty;

            Console.WriteLine($"\r\nОбработка файла C:\FileName \r\n");

            using (StreamReader streamReader = File.OpenText("C:\FileName"))
            {
                while ((coords = streamReader.ReadLine()) != null)
                {
                    if (coords == string.Empty)
                        break;

                    Console.WriteLine(ProcessLine(coords));
                }
             }
            
        }

  4) Magic Numbers:
	base64String += dictionary[BinToDec(binNumber.Substring(i * 6, 6))];

  5) Magic Strings:
	 for (int i = 0; i < "0000000000000000".Length / 8; i++)
            {
                base64String += dictionary[BinToDec(binNumber.Substring(i * 6, 6))];
            }

  6) Blind faith:
    При его использовании возможно непредвиденное поведение программы или возникновения исключительных ситуаций.

  7) Exception handling:
     Вносит неоднозначность в программы, становится неочевидным, для чего используется конструкция try-throw-catch.

Анти-паттерны в проектировании решения:
  1) Golde Hummer:
    Ошибочность применения в том, что нет универсальных паттернов. Сколько задач, столько решений.

  2) Reinventing the wheel:
    Стоит применять решения, которые уже были получены для конкретной задачи. Изобретение велосипеда - трата времени.

  3) Cargo cult programming:
    Без четкого пониманию паттернов не добиться правильного решения задачи. "Плохой" код может в будущем стоить больших пустых вложений.

  4) Blob:
    Трудно поддерживать программы, в которых классы выполняют очень много функций.

  5) Interface blob:
    Частный случай blob. Лишает код универсальности, делая его одноразовым.

  6) Magic pushbutton:
    Внедрение логики программы в пользовательский интерфейс делает код менее понятным.

  7) Premature optimization:
    Нельзя производить оптимизацию, когда код еще пишется (переписывается). Производить оптимизацию стоит в тех случаях, когда инструмент оптимизации уже готов к использованию.

  8) Premute pessimizaton:
    Нельзя делать пессимизацию заведомо, т.к. в будущем будет сложнее читать код при оптимизации.

Анти-паттерны в методах решения задач:
  1) Programming by permutation:
    Не дает программисту понимая сути происходящего и устраняет только симптомы.
